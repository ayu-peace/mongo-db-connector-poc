/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 36.0, "minX": 0.0, "maxY": 2831.0, "series": [{"data": [[0.0, 39.0], [0.1, 44.0], [0.2, 44.0], [0.3, 44.0], [0.4, 45.0], [0.5, 45.0], [0.6, 46.0], [0.7, 46.0], [0.8, 46.0], [0.9, 47.0], [1.0, 47.0], [1.1, 48.0], [1.2, 48.0], [1.3, 48.0], [1.4, 48.0], [1.5, 48.0], [1.6, 49.0], [1.7, 49.0], [1.8, 49.0], [1.9, 49.0], [2.0, 50.0], [2.1, 50.0], [2.2, 50.0], [2.3, 51.0], [2.4, 51.0], [2.5, 51.0], [2.6, 51.0], [2.7, 52.0], [2.8, 52.0], [2.9, 52.0], [3.0, 52.0], [3.1, 52.0], [3.2, 52.0], [3.3, 52.0], [3.4, 53.0], [3.5, 53.0], [3.6, 53.0], [3.7, 53.0], [3.8, 53.0], [3.9, 54.0], [4.0, 54.0], [4.1, 54.0], [4.2, 54.0], [4.3, 54.0], [4.4, 54.0], [4.5, 54.0], [4.6, 55.0], [4.7, 55.0], [4.8, 55.0], [4.9, 55.0], [5.0, 56.0], [5.1, 56.0], [5.2, 56.0], [5.3, 56.0], [5.4, 56.0], [5.5, 57.0], [5.6, 57.0], [5.7, 57.0], [5.8, 57.0], [5.9, 58.0], [6.0, 58.0], [6.1, 58.0], [6.2, 58.0], [6.3, 58.0], [6.4, 58.0], [6.5, 59.0], [6.6, 59.0], [6.7, 59.0], [6.8, 59.0], [6.9, 59.0], [7.0, 59.0], [7.1, 59.0], [7.2, 59.0], [7.3, 60.0], [7.4, 60.0], [7.5, 60.0], [7.6, 60.0], [7.7, 60.0], [7.8, 60.0], [7.9, 60.0], [8.0, 60.0], [8.1, 60.0], [8.2, 60.0], [8.3, 60.0], [8.4, 61.0], [8.5, 61.0], [8.6, 61.0], [8.7, 61.0], [8.8, 61.0], [8.9, 61.0], [9.0, 61.0], [9.1, 61.0], [9.2, 62.0], [9.3, 62.0], [9.4, 62.0], [9.5, 62.0], [9.6, 63.0], [9.7, 63.0], [9.8, 63.0], [9.9, 63.0], [10.0, 63.0], [10.1, 63.0], [10.2, 63.0], [10.3, 64.0], [10.4, 64.0], [10.5, 64.0], [10.6, 64.0], [10.7, 64.0], [10.8, 64.0], [10.9, 64.0], [11.0, 64.0], [11.1, 64.0], [11.2, 65.0], [11.3, 65.0], [11.4, 65.0], [11.5, 65.0], [11.6, 65.0], [11.7, 65.0], [11.8, 65.0], [11.9, 65.0], [12.0, 65.0], [12.1, 65.0], [12.2, 65.0], [12.3, 65.0], [12.4, 66.0], [12.5, 66.0], [12.6, 66.0], [12.7, 66.0], [12.8, 66.0], [12.9, 66.0], [13.0, 66.0], [13.1, 67.0], [13.2, 67.0], [13.3, 67.0], [13.4, 68.0], [13.5, 68.0], [13.6, 68.0], [13.7, 68.0], [13.8, 68.0], [13.9, 69.0], [14.0, 69.0], [14.1, 69.0], [14.2, 69.0], [14.3, 69.0], [14.4, 69.0], [14.5, 69.0], [14.6, 69.0], [14.7, 70.0], [14.8, 70.0], [14.9, 70.0], [15.0, 70.0], [15.1, 71.0], [15.2, 71.0], [15.3, 71.0], [15.4, 71.0], [15.5, 71.0], [15.6, 71.0], [15.7, 71.0], [15.8, 72.0], [15.9, 72.0], [16.0, 72.0], [16.1, 72.0], [16.2, 72.0], [16.3, 72.0], [16.4, 72.0], [16.5, 72.0], [16.6, 72.0], [16.7, 73.0], [16.8, 73.0], [16.9, 73.0], [17.0, 73.0], [17.1, 73.0], [17.2, 73.0], [17.3, 73.0], [17.4, 73.0], [17.5, 73.0], [17.6, 73.0], [17.7, 73.0], [17.8, 74.0], [17.9, 74.0], [18.0, 74.0], [18.1, 74.0], [18.2, 74.0], [18.3, 74.0], [18.4, 75.0], [18.5, 75.0], [18.6, 75.0], [18.7, 75.0], [18.8, 75.0], [18.9, 75.0], [19.0, 75.0], [19.1, 75.0], [19.2, 76.0], [19.3, 76.0], [19.4, 76.0], [19.5, 76.0], [19.6, 76.0], [19.7, 76.0], [19.8, 76.0], [19.9, 76.0], [20.0, 77.0], [20.1, 77.0], [20.2, 77.0], [20.3, 77.0], [20.4, 77.0], [20.5, 77.0], [20.6, 78.0], [20.7, 78.0], [20.8, 78.0], [20.9, 78.0], [21.0, 78.0], [21.1, 79.0], [21.2, 79.0], [21.3, 79.0], [21.4, 79.0], [21.5, 79.0], [21.6, 79.0], [21.7, 79.0], [21.8, 79.0], [21.9, 79.0], [22.0, 79.0], [22.1, 80.0], [22.2, 80.0], [22.3, 80.0], [22.4, 80.0], [22.5, 81.0], [22.6, 81.0], [22.7, 81.0], [22.8, 81.0], [22.9, 81.0], [23.0, 81.0], [23.1, 81.0], [23.2, 82.0], [23.3, 82.0], [23.4, 82.0], [23.5, 82.0], [23.6, 83.0], [23.7, 83.0], [23.8, 83.0], [23.9, 83.0], [24.0, 83.0], [24.1, 83.0], [24.2, 83.0], [24.3, 84.0], [24.4, 84.0], [24.5, 84.0], [24.6, 85.0], [24.7, 85.0], [24.8, 85.0], [24.9, 85.0], [25.0, 85.0], [25.1, 86.0], [25.2, 86.0], [25.3, 86.0], [25.4, 86.0], [25.5, 86.0], [25.6, 86.0], [25.7, 87.0], [25.8, 87.0], [25.9, 87.0], [26.0, 87.0], [26.1, 87.0], [26.2, 88.0], [26.3, 88.0], [26.4, 88.0], [26.5, 88.0], [26.6, 88.0], [26.7, 88.0], [26.8, 88.0], [26.9, 88.0], [27.0, 89.0], [27.1, 89.0], [27.2, 89.0], [27.3, 89.0], [27.4, 89.0], [27.5, 89.0], [27.6, 89.0], [27.7, 90.0], [27.8, 90.0], [27.9, 90.0], [28.0, 90.0], [28.1, 90.0], [28.2, 90.0], [28.3, 90.0], [28.4, 90.0], [28.5, 90.0], [28.6, 90.0], [28.7, 90.0], [28.8, 91.0], [28.9, 91.0], [29.0, 91.0], [29.1, 91.0], [29.2, 91.0], [29.3, 91.0], [29.4, 91.0], [29.5, 91.0], [29.6, 92.0], [29.7, 92.0], [29.8, 92.0], [29.9, 92.0], [30.0, 92.0], [30.1, 93.0], [30.2, 93.0], [30.3, 93.0], [30.4, 93.0], [30.5, 93.0], [30.6, 93.0], [30.7, 93.0], [30.8, 93.0], [30.9, 94.0], [31.0, 94.0], [31.1, 94.0], [31.2, 94.0], [31.3, 95.0], [31.4, 95.0], [31.5, 95.0], [31.6, 95.0], [31.7, 96.0], [31.8, 96.0], [31.9, 96.0], [32.0, 96.0], [32.1, 96.0], [32.2, 96.0], [32.3, 96.0], [32.4, 97.0], [32.5, 97.0], [32.6, 97.0], [32.7, 98.0], [32.8, 98.0], [32.9, 98.0], [33.0, 98.0], [33.1, 98.0], [33.2, 98.0], [33.3, 99.0], [33.4, 99.0], [33.5, 99.0], [33.6, 99.0], [33.7, 99.0], [33.8, 99.0], [33.9, 99.0], [34.0, 99.0], [34.1, 100.0], [34.2, 100.0], [34.3, 100.0], [34.4, 100.0], [34.5, 101.0], [34.6, 101.0], [34.7, 101.0], [34.8, 101.0], [34.9, 101.0], [35.0, 101.0], [35.1, 101.0], [35.2, 102.0], [35.3, 102.0], [35.4, 102.0], [35.5, 102.0], [35.6, 102.0], [35.7, 103.0], [35.8, 103.0], [35.9, 103.0], [36.0, 103.0], [36.1, 103.0], [36.2, 103.0], [36.3, 104.0], [36.4, 104.0], [36.5, 104.0], [36.6, 105.0], [36.7, 105.0], [36.8, 105.0], [36.9, 105.0], [37.0, 105.0], [37.1, 105.0], [37.2, 105.0], [37.3, 106.0], [37.4, 106.0], [37.5, 106.0], [37.6, 106.0], [37.7, 107.0], [37.8, 107.0], [37.9, 107.0], [38.0, 108.0], [38.1, 108.0], [38.2, 108.0], [38.3, 108.0], [38.4, 108.0], [38.5, 108.0], [38.6, 109.0], [38.7, 109.0], [38.8, 110.0], [38.9, 110.0], [39.0, 110.0], [39.1, 110.0], [39.2, 111.0], [39.3, 111.0], [39.4, 112.0], [39.5, 112.0], [39.6, 112.0], [39.7, 113.0], [39.8, 113.0], [39.9, 113.0], [40.0, 113.0], [40.1, 113.0], [40.2, 113.0], [40.3, 114.0], [40.4, 114.0], [40.5, 115.0], [40.6, 115.0], [40.7, 115.0], [40.8, 116.0], [40.9, 117.0], [41.0, 117.0], [41.1, 117.0], [41.2, 118.0], [41.3, 118.0], [41.4, 118.0], [41.5, 118.0], [41.6, 119.0], [41.7, 119.0], [41.8, 119.0], [41.9, 119.0], [42.0, 119.0], [42.1, 120.0], [42.2, 120.0], [42.3, 120.0], [42.4, 121.0], [42.5, 121.0], [42.6, 122.0], [42.7, 123.0], [42.8, 123.0], [42.9, 124.0], [43.0, 125.0], [43.1, 125.0], [43.2, 125.0], [43.3, 125.0], [43.4, 126.0], [43.5, 126.0], [43.6, 126.0], [43.7, 126.0], [43.8, 127.0], [43.9, 127.0], [44.0, 128.0], [44.1, 128.0], [44.2, 128.0], [44.3, 129.0], [44.4, 129.0], [44.5, 130.0], [44.6, 131.0], [44.7, 131.0], [44.8, 132.0], [44.9, 132.0], [45.0, 133.0], [45.1, 133.0], [45.2, 133.0], [45.3, 134.0], [45.4, 134.0], [45.5, 135.0], [45.6, 135.0], [45.7, 135.0], [45.8, 135.0], [45.9, 135.0], [46.0, 135.0], [46.1, 136.0], [46.2, 136.0], [46.3, 137.0], [46.4, 138.0], [46.5, 138.0], [46.6, 138.0], [46.7, 138.0], [46.8, 139.0], [46.9, 140.0], [47.0, 141.0], [47.1, 141.0], [47.2, 142.0], [47.3, 144.0], [47.4, 145.0], [47.5, 145.0], [47.6, 146.0], [47.7, 146.0], [47.8, 147.0], [47.9, 147.0], [48.0, 148.0], [48.1, 148.0], [48.2, 149.0], [48.3, 150.0], [48.4, 152.0], [48.5, 152.0], [48.6, 152.0], [48.7, 153.0], [48.8, 154.0], [48.9, 155.0], [49.0, 156.0], [49.1, 156.0], [49.2, 158.0], [49.3, 159.0], [49.4, 160.0], [49.5, 164.0], [49.6, 165.0], [49.7, 165.0], [49.8, 165.0], [49.9, 168.0], [50.0, 169.0], [50.1, 170.0], [50.2, 171.0], [50.3, 174.0], [50.4, 174.0], [50.5, 175.0], [50.6, 178.0], [50.7, 180.0], [50.8, 181.0], [50.9, 183.0], [51.0, 184.0], [51.1, 186.0], [51.2, 186.0], [51.3, 187.0], [51.4, 188.0], [51.5, 188.0], [51.6, 188.0], [51.7, 189.0], [51.8, 191.0], [51.9, 192.0], [52.0, 197.0], [52.1, 253.0], [52.2, 276.0], [52.3, 280.0], [52.4, 281.0], [52.5, 302.0], [52.6, 307.0], [52.7, 381.0], [52.8, 399.0], [52.9, 679.0], [53.0, 708.0], [53.1, 713.0], [53.2, 734.0], [53.3, 743.0], [53.4, 744.0], [53.5, 744.0], [53.6, 748.0], [53.7, 753.0], [53.8, 758.0], [53.9, 760.0], [54.0, 768.0], [54.1, 771.0], [54.2, 778.0], [54.3, 779.0], [54.4, 782.0], [54.5, 783.0], [54.6, 784.0], [54.7, 788.0], [54.8, 793.0], [54.9, 793.0], [55.0, 795.0], [55.1, 797.0], [55.2, 801.0], [55.3, 802.0], [55.4, 802.0], [55.5, 803.0], [55.6, 806.0], [55.7, 807.0], [55.8, 807.0], [55.9, 809.0], [56.0, 809.0], [56.1, 809.0], [56.2, 810.0], [56.3, 812.0], [56.4, 812.0], [56.5, 813.0], [56.6, 813.0], [56.7, 816.0], [56.8, 816.0], [56.9, 816.0], [57.0, 816.0], [57.1, 819.0], [57.2, 819.0], [57.3, 819.0], [57.4, 819.0], [57.5, 820.0], [57.6, 820.0], [57.7, 820.0], [57.8, 822.0], [57.9, 822.0], [58.0, 822.0], [58.1, 823.0], [58.2, 825.0], [58.3, 825.0], [58.4, 826.0], [58.5, 826.0], [58.6, 827.0], [58.7, 827.0], [58.8, 828.0], [58.9, 829.0], [59.0, 830.0], [59.1, 830.0], [59.2, 831.0], [59.3, 832.0], [59.4, 832.0], [59.5, 833.0], [59.6, 834.0], [59.7, 835.0], [59.8, 836.0], [59.9, 837.0], [60.0, 838.0], [60.1, 840.0], [60.2, 840.0], [60.3, 840.0], [60.4, 843.0], [60.5, 844.0], [60.6, 845.0], [60.7, 845.0], [60.8, 846.0], [60.9, 847.0], [61.0, 847.0], [61.1, 847.0], [61.2, 847.0], [61.3, 847.0], [61.4, 847.0], [61.5, 848.0], [61.6, 849.0], [61.7, 849.0], [61.8, 849.0], [61.9, 849.0], [62.0, 850.0], [62.1, 850.0], [62.2, 850.0], [62.3, 850.0], [62.4, 851.0], [62.5, 851.0], [62.6, 852.0], [62.7, 852.0], [62.8, 853.0], [62.9, 853.0], [63.0, 854.0], [63.1, 854.0], [63.2, 855.0], [63.3, 855.0], [63.4, 855.0], [63.5, 856.0], [63.6, 857.0], [63.7, 857.0], [63.8, 857.0], [63.9, 858.0], [64.0, 859.0], [64.1, 860.0], [64.2, 860.0], [64.3, 860.0], [64.4, 861.0], [64.5, 861.0], [64.6, 862.0], [64.7, 862.0], [64.8, 862.0], [64.9, 863.0], [65.0, 863.0], [65.1, 863.0], [65.2, 863.0], [65.3, 864.0], [65.4, 865.0], [65.5, 865.0], [65.6, 865.0], [65.7, 865.0], [65.8, 866.0], [65.9, 866.0], [66.0, 866.0], [66.1, 867.0], [66.2, 867.0], [66.3, 867.0], [66.4, 867.0], [66.5, 868.0], [66.6, 869.0], [66.7, 869.0], [66.8, 869.0], [66.9, 870.0], [67.0, 871.0], [67.1, 871.0], [67.2, 871.0], [67.3, 872.0], [67.4, 872.0], [67.5, 872.0], [67.6, 873.0], [67.7, 873.0], [67.8, 874.0], [67.9, 874.0], [68.0, 875.0], [68.1, 875.0], [68.2, 875.0], [68.3, 876.0], [68.4, 876.0], [68.5, 876.0], [68.6, 876.0], [68.7, 877.0], [68.8, 877.0], [68.9, 877.0], [69.0, 878.0], [69.1, 879.0], [69.2, 879.0], [69.3, 880.0], [69.4, 880.0], [69.5, 880.0], [69.6, 881.0], [69.7, 881.0], [69.8, 882.0], [69.9, 882.0], [70.0, 882.0], [70.1, 882.0], [70.2, 882.0], [70.3, 882.0], [70.4, 883.0], [70.5, 883.0], [70.6, 883.0], [70.7, 883.0], [70.8, 884.0], [70.9, 884.0], [71.0, 884.0], [71.1, 884.0], [71.2, 884.0], [71.3, 885.0], [71.4, 885.0], [71.5, 885.0], [71.6, 885.0], [71.7, 886.0], [71.8, 886.0], [71.9, 886.0], [72.0, 886.0], [72.1, 886.0], [72.2, 887.0], [72.3, 887.0], [72.4, 887.0], [72.5, 887.0], [72.6, 887.0], [72.7, 888.0], [72.8, 888.0], [72.9, 889.0], [73.0, 889.0], [73.1, 889.0], [73.2, 890.0], [73.3, 890.0], [73.4, 891.0], [73.5, 891.0], [73.6, 891.0], [73.7, 892.0], [73.8, 892.0], [73.9, 892.0], [74.0, 893.0], [74.1, 893.0], [74.2, 893.0], [74.3, 893.0], [74.4, 893.0], [74.5, 893.0], [74.6, 894.0], [74.7, 894.0], [74.8, 894.0], [74.9, 895.0], [75.0, 895.0], [75.1, 896.0], [75.2, 896.0], [75.3, 896.0], [75.4, 896.0], [75.5, 897.0], [75.6, 897.0], [75.7, 898.0], [75.8, 898.0], [75.9, 898.0], [76.0, 899.0], [76.1, 900.0], [76.2, 900.0], [76.3, 900.0], [76.4, 901.0], [76.5, 902.0], [76.6, 902.0], [76.7, 902.0], [76.8, 902.0], [76.9, 903.0], [77.0, 903.0], [77.1, 903.0], [77.2, 904.0], [77.3, 904.0], [77.4, 904.0], [77.5, 904.0], [77.6, 904.0], [77.7, 905.0], [77.8, 905.0], [77.9, 905.0], [78.0, 905.0], [78.1, 905.0], [78.2, 905.0], [78.3, 906.0], [78.4, 906.0], [78.5, 906.0], [78.6, 907.0], [78.7, 907.0], [78.8, 907.0], [78.9, 907.0], [79.0, 908.0], [79.1, 908.0], [79.2, 908.0], [79.3, 908.0], [79.4, 908.0], [79.5, 909.0], [79.6, 910.0], [79.7, 910.0], [79.8, 910.0], [79.9, 910.0], [80.0, 910.0], [80.1, 911.0], [80.2, 911.0], [80.3, 911.0], [80.4, 912.0], [80.5, 912.0], [80.6, 912.0], [80.7, 913.0], [80.8, 913.0], [80.9, 914.0], [81.0, 914.0], [81.1, 914.0], [81.2, 914.0], [81.3, 914.0], [81.4, 915.0], [81.5, 915.0], [81.6, 915.0], [81.7, 915.0], [81.8, 915.0], [81.9, 916.0], [82.0, 916.0], [82.1, 916.0], [82.2, 916.0], [82.3, 916.0], [82.4, 917.0], [82.5, 917.0], [82.6, 918.0], [82.7, 918.0], [82.8, 918.0], [82.9, 919.0], [83.0, 919.0], [83.1, 919.0], [83.2, 920.0], [83.3, 920.0], [83.4, 920.0], [83.5, 921.0], [83.6, 921.0], [83.7, 921.0], [83.8, 921.0], [83.9, 922.0], [84.0, 922.0], [84.1, 922.0], [84.2, 922.0], [84.3, 922.0], [84.4, 923.0], [84.5, 923.0], [84.6, 923.0], [84.7, 924.0], [84.8, 924.0], [84.9, 924.0], [85.0, 924.0], [85.1, 925.0], [85.2, 925.0], [85.3, 925.0], [85.4, 925.0], [85.5, 926.0], [85.6, 926.0], [85.7, 927.0], [85.8, 927.0], [85.9, 928.0], [86.0, 929.0], [86.1, 929.0], [86.2, 929.0], [86.3, 929.0], [86.4, 930.0], [86.5, 930.0], [86.6, 930.0], [86.7, 931.0], [86.8, 932.0], [86.9, 932.0], [87.0, 932.0], [87.1, 933.0], [87.2, 933.0], [87.3, 933.0], [87.4, 933.0], [87.5, 934.0], [87.6, 935.0], [87.7, 935.0], [87.8, 935.0], [87.9, 936.0], [88.0, 936.0], [88.1, 936.0], [88.2, 936.0], [88.3, 937.0], [88.4, 938.0], [88.5, 939.0], [88.6, 939.0], [88.7, 940.0], [88.8, 940.0], [88.9, 940.0], [89.0, 940.0], [89.1, 941.0], [89.2, 941.0], [89.3, 941.0], [89.4, 941.0], [89.5, 941.0], [89.6, 941.0], [89.7, 941.0], [89.8, 942.0], [89.9, 942.0], [90.0, 942.0], [90.1, 943.0], [90.2, 943.0], [90.3, 944.0], [90.4, 944.0], [90.5, 944.0], [90.6, 945.0], [90.7, 945.0], [90.8, 946.0], [90.9, 946.0], [91.0, 946.0], [91.1, 946.0], [91.2, 946.0], [91.3, 947.0], [91.4, 947.0], [91.5, 948.0], [91.6, 948.0], [91.7, 948.0], [91.8, 949.0], [91.9, 949.0], [92.0, 950.0], [92.1, 950.0], [92.2, 951.0], [92.3, 951.0], [92.4, 951.0], [92.5, 951.0], [92.6, 951.0], [92.7, 953.0], [92.8, 953.0], [92.9, 953.0], [93.0, 954.0], [93.1, 954.0], [93.2, 955.0], [93.3, 956.0], [93.4, 958.0], [93.5, 959.0], [93.6, 960.0], [93.7, 961.0], [93.8, 961.0], [93.9, 961.0], [94.0, 962.0], [94.1, 963.0], [94.2, 963.0], [94.3, 963.0], [94.4, 964.0], [94.5, 964.0], [94.6, 964.0], [94.7, 964.0], [94.8, 965.0], [94.9, 965.0], [95.0, 966.0], [95.1, 968.0], [95.2, 969.0], [95.3, 969.0], [95.4, 970.0], [95.5, 971.0], [95.6, 971.0], [95.7, 972.0], [95.8, 973.0], [95.9, 975.0], [96.0, 976.0], [96.1, 977.0], [96.2, 978.0], [96.3, 978.0], [96.4, 978.0], [96.5, 979.0], [96.6, 981.0], [96.7, 982.0], [96.8, 982.0], [96.9, 982.0], [97.0, 984.0], [97.1, 985.0], [97.2, 986.0], [97.3, 986.0], [97.4, 989.0], [97.5, 989.0], [97.6, 990.0], [97.7, 990.0], [97.8, 991.0], [97.9, 991.0], [98.0, 991.0], [98.1, 994.0], [98.2, 995.0], [98.3, 996.0], [98.4, 999.0], [98.5, 999.0], [98.6, 1002.0], [98.7, 1005.0], [98.8, 1005.0], [98.9, 1007.0], [99.0, 1007.0], [99.1, 1010.0], [99.2, 1010.0], [99.3, 1022.0], [99.4, 1028.0], [99.5, 1039.0], [99.6, 1093.0], [99.7, 1107.0], [99.8, 1109.0], [99.9, 1808.0], [100.0, 1842.0]], "isOverall": false, "label": "PUT /folder", "isController": false}, {"data": [[0.0, 36.0], [0.1, 40.0], [0.2, 41.0], [0.3, 42.0], [0.4, 43.0], [0.5, 44.0], [0.6, 44.0], [0.7, 44.0], [0.8, 45.0], [0.9, 45.0], [1.0, 45.0], [1.1, 46.0], [1.2, 46.0], [1.3, 46.0], [1.4, 46.0], [1.5, 47.0], [1.6, 47.0], [1.7, 47.0], [1.8, 48.0], [1.9, 48.0], [2.0, 48.0], [2.1, 49.0], [2.2, 49.0], [2.3, 49.0], [2.4, 49.0], [2.5, 49.0], [2.6, 50.0], [2.7, 50.0], [2.8, 50.0], [2.9, 50.0], [3.0, 50.0], [3.1, 51.0], [3.2, 51.0], [3.3, 51.0], [3.4, 51.0], [3.5, 51.0], [3.6, 51.0], [3.7, 51.0], [3.8, 52.0], [3.9, 52.0], [4.0, 52.0], [4.1, 52.0], [4.2, 52.0], [4.3, 52.0], [4.4, 52.0], [4.5, 52.0], [4.6, 53.0], [4.7, 53.0], [4.8, 53.0], [4.9, 53.0], [5.0, 53.0], [5.1, 53.0], [5.2, 53.0], [5.3, 54.0], [5.4, 54.0], [5.5, 54.0], [5.6, 54.0], [5.7, 54.0], [5.8, 54.0], [5.9, 54.0], [6.0, 54.0], [6.1, 55.0], [6.2, 55.0], [6.3, 55.0], [6.4, 55.0], [6.5, 55.0], [6.6, 55.0], [6.7, 55.0], [6.8, 55.0], [6.9, 55.0], [7.0, 55.0], [7.1, 56.0], [7.2, 56.0], [7.3, 56.0], [7.4, 56.0], [7.5, 56.0], [7.6, 56.0], [7.7, 56.0], [7.8, 56.0], [7.9, 56.0], [8.0, 56.0], [8.1, 57.0], [8.2, 57.0], [8.3, 57.0], [8.4, 57.0], [8.5, 57.0], [8.6, 57.0], [8.7, 57.0], [8.8, 57.0], [8.9, 57.0], [9.0, 57.0], [9.1, 57.0], [9.2, 57.0], [9.3, 58.0], [9.4, 58.0], [9.5, 58.0], [9.6, 58.0], [9.7, 58.0], [9.8, 58.0], [9.9, 58.0], [10.0, 58.0], [10.1, 58.0], [10.2, 58.0], [10.3, 59.0], [10.4, 59.0], [10.5, 59.0], [10.6, 59.0], [10.7, 59.0], [10.8, 59.0], [10.9, 59.0], [11.0, 59.0], [11.1, 59.0], [11.2, 59.0], [11.3, 60.0], [11.4, 60.0], [11.5, 60.0], [11.6, 60.0], [11.7, 60.0], [11.8, 60.0], [11.9, 60.0], [12.0, 60.0], [12.1, 60.0], [12.2, 60.0], [12.3, 60.0], [12.4, 60.0], [12.5, 61.0], [12.6, 61.0], [12.7, 61.0], [12.8, 61.0], [12.9, 61.0], [13.0, 61.0], [13.1, 61.0], [13.2, 61.0], [13.3, 61.0], [13.4, 61.0], [13.5, 62.0], [13.6, 62.0], [13.7, 62.0], [13.8, 62.0], [13.9, 62.0], [14.0, 62.0], [14.1, 62.0], [14.2, 62.0], [14.3, 62.0], [14.4, 62.0], [14.5, 62.0], [14.6, 63.0], [14.7, 63.0], [14.8, 63.0], [14.9, 63.0], [15.0, 63.0], [15.1, 63.0], [15.2, 63.0], [15.3, 63.0], [15.4, 63.0], [15.5, 63.0], [15.6, 64.0], [15.7, 64.0], [15.8, 64.0], [15.9, 64.0], [16.0, 64.0], [16.1, 64.0], [16.2, 64.0], [16.3, 64.0], [16.4, 64.0], [16.5, 64.0], [16.6, 64.0], [16.7, 64.0], [16.8, 65.0], [16.9, 65.0], [17.0, 65.0], [17.1, 65.0], [17.2, 65.0], [17.3, 65.0], [17.4, 65.0], [17.5, 65.0], [17.6, 65.0], [17.7, 65.0], [17.8, 65.0], [17.9, 65.0], [18.0, 65.0], [18.1, 66.0], [18.2, 66.0], [18.3, 66.0], [18.4, 66.0], [18.5, 66.0], [18.6, 66.0], [18.7, 66.0], [18.8, 66.0], [18.9, 66.0], [19.0, 66.0], [19.1, 66.0], [19.2, 66.0], [19.3, 67.0], [19.4, 67.0], [19.5, 67.0], [19.6, 67.0], [19.7, 67.0], [19.8, 67.0], [19.9, 67.0], [20.0, 67.0], [20.1, 67.0], [20.2, 67.0], [20.3, 67.0], [20.4, 68.0], [20.5, 68.0], [20.6, 68.0], [20.7, 68.0], [20.8, 68.0], [20.9, 68.0], [21.0, 68.0], [21.1, 68.0], [21.2, 68.0], [21.3, 68.0], [21.4, 68.0], [21.5, 69.0], [21.6, 69.0], [21.7, 69.0], [21.8, 69.0], [21.9, 69.0], [22.0, 69.0], [22.1, 69.0], [22.2, 69.0], [22.3, 69.0], [22.4, 69.0], [22.5, 69.0], [22.6, 70.0], [22.7, 70.0], [22.8, 70.0], [22.9, 70.0], [23.0, 70.0], [23.1, 70.0], [23.2, 70.0], [23.3, 70.0], [23.4, 70.0], [23.5, 70.0], [23.6, 71.0], [23.7, 71.0], [23.8, 71.0], [23.9, 71.0], [24.0, 71.0], [24.1, 71.0], [24.2, 71.0], [24.3, 71.0], [24.4, 71.0], [24.5, 71.0], [24.6, 72.0], [24.7, 72.0], [24.8, 72.0], [24.9, 72.0], [25.0, 72.0], [25.1, 72.0], [25.2, 72.0], [25.3, 72.0], [25.4, 72.0], [25.5, 72.0], [25.6, 73.0], [25.7, 73.0], [25.8, 73.0], [25.9, 73.0], [26.0, 73.0], [26.1, 73.0], [26.2, 73.0], [26.3, 73.0], [26.4, 74.0], [26.5, 74.0], [26.6, 74.0], [26.7, 74.0], [26.8, 74.0], [26.9, 74.0], [27.0, 74.0], [27.1, 74.0], [27.2, 74.0], [27.3, 75.0], [27.4, 75.0], [27.5, 75.0], [27.6, 75.0], [27.7, 75.0], [27.8, 75.0], [27.9, 75.0], [28.0, 75.0], [28.1, 76.0], [28.2, 76.0], [28.3, 76.0], [28.4, 76.0], [28.5, 76.0], [28.6, 76.0], [28.7, 76.0], [28.8, 77.0], [28.9, 77.0], [29.0, 77.0], [29.1, 77.0], [29.2, 77.0], [29.3, 77.0], [29.4, 77.0], [29.5, 77.0], [29.6, 77.0], [29.7, 78.0], [29.8, 78.0], [29.9, 78.0], [30.0, 78.0], [30.1, 78.0], [30.2, 78.0], [30.3, 78.0], [30.4, 79.0], [30.5, 79.0], [30.6, 79.0], [30.7, 79.0], [30.8, 79.0], [30.9, 79.0], [31.0, 79.0], [31.1, 79.0], [31.2, 80.0], [31.3, 80.0], [31.4, 80.0], [31.5, 80.0], [31.6, 80.0], [31.7, 80.0], [31.8, 80.0], [31.9, 81.0], [32.0, 81.0], [32.1, 81.0], [32.2, 81.0], [32.3, 81.0], [32.4, 81.0], [32.5, 81.0], [32.6, 82.0], [32.7, 82.0], [32.8, 82.0], [32.9, 82.0], [33.0, 82.0], [33.1, 82.0], [33.2, 82.0], [33.3, 82.0], [33.4, 83.0], [33.5, 83.0], [33.6, 83.0], [33.7, 83.0], [33.8, 83.0], [33.9, 83.0], [34.0, 84.0], [34.1, 84.0], [34.2, 84.0], [34.3, 84.0], [34.4, 84.0], [34.5, 84.0], [34.6, 84.0], [34.7, 85.0], [34.8, 85.0], [34.9, 85.0], [35.0, 85.0], [35.1, 85.0], [35.2, 85.0], [35.3, 86.0], [35.4, 86.0], [35.5, 86.0], [35.6, 86.0], [35.7, 86.0], [35.8, 86.0], [35.9, 86.0], [36.0, 87.0], [36.1, 87.0], [36.2, 87.0], [36.3, 87.0], [36.4, 87.0], [36.5, 87.0], [36.6, 87.0], [36.7, 88.0], [36.8, 88.0], [36.9, 88.0], [37.0, 88.0], [37.1, 88.0], [37.2, 88.0], [37.3, 88.0], [37.4, 89.0], [37.5, 89.0], [37.6, 89.0], [37.7, 89.0], [37.8, 89.0], [37.9, 89.0], [38.0, 90.0], [38.1, 90.0], [38.2, 90.0], [38.3, 90.0], [38.4, 90.0], [38.5, 90.0], [38.6, 91.0], [38.7, 91.0], [38.8, 91.0], [38.9, 91.0], [39.0, 91.0], [39.1, 91.0], [39.2, 92.0], [39.3, 92.0], [39.4, 92.0], [39.5, 92.0], [39.6, 92.0], [39.7, 92.0], [39.8, 93.0], [39.9, 93.0], [40.0, 93.0], [40.1, 93.0], [40.2, 93.0], [40.3, 94.0], [40.4, 94.0], [40.5, 94.0], [40.6, 94.0], [40.7, 95.0], [40.8, 95.0], [40.9, 95.0], [41.0, 95.0], [41.1, 95.0], [41.2, 96.0], [41.3, 96.0], [41.4, 96.0], [41.5, 96.0], [41.6, 97.0], [41.7, 97.0], [41.8, 97.0], [41.9, 97.0], [42.0, 97.0], [42.1, 97.0], [42.2, 98.0], [42.3, 98.0], [42.4, 98.0], [42.5, 98.0], [42.6, 99.0], [42.7, 99.0], [42.8, 99.0], [42.9, 99.0], [43.0, 99.0], [43.1, 100.0], [43.2, 100.0], [43.3, 100.0], [43.4, 100.0], [43.5, 100.0], [43.6, 101.0], [43.7, 101.0], [43.8, 101.0], [43.9, 101.0], [44.0, 102.0], [44.1, 102.0], [44.2, 102.0], [44.3, 102.0], [44.4, 103.0], [44.5, 103.0], [44.6, 103.0], [44.7, 103.0], [44.8, 104.0], [44.9, 104.0], [45.0, 104.0], [45.1, 104.0], [45.2, 105.0], [45.3, 105.0], [45.4, 105.0], [45.5, 105.0], [45.6, 105.0], [45.7, 106.0], [45.8, 106.0], [45.9, 106.0], [46.0, 107.0], [46.1, 107.0], [46.2, 107.0], [46.3, 108.0], [46.4, 108.0], [46.5, 108.0], [46.6, 109.0], [46.7, 109.0], [46.8, 109.0], [46.9, 110.0], [47.0, 110.0], [47.1, 110.0], [47.2, 111.0], [47.3, 111.0], [47.4, 111.0], [47.5, 112.0], [47.6, 112.0], [47.7, 112.0], [47.8, 113.0], [47.9, 113.0], [48.0, 113.0], [48.1, 114.0], [48.2, 114.0], [48.3, 115.0], [48.4, 115.0], [48.5, 116.0], [48.6, 116.0], [48.7, 116.0], [48.8, 117.0], [48.9, 117.0], [49.0, 118.0], [49.1, 118.0], [49.2, 119.0], [49.3, 119.0], [49.4, 120.0], [49.5, 120.0], [49.6, 121.0], [49.7, 122.0], [49.8, 122.0], [49.9, 123.0], [50.0, 124.0], [50.1, 124.0], [50.2, 125.0], [50.3, 125.0], [50.4, 126.0], [50.5, 127.0], [50.6, 127.0], [50.7, 128.0], [50.8, 128.0], [50.9, 129.0], [51.0, 130.0], [51.1, 130.0], [51.2, 131.0], [51.3, 132.0], [51.4, 133.0], [51.5, 133.0], [51.6, 134.0], [51.7, 134.0], [51.8, 135.0], [51.9, 135.0], [52.0, 136.0], [52.1, 136.0], [52.2, 137.0], [52.3, 138.0], [52.4, 138.0], [52.5, 139.0], [52.6, 140.0], [52.7, 141.0], [52.8, 142.0], [52.9, 143.0], [53.0, 143.0], [53.1, 144.0], [53.2, 145.0], [53.3, 146.0], [53.4, 148.0], [53.5, 149.0], [53.6, 149.0], [53.7, 150.0], [53.8, 151.0], [53.9, 153.0], [54.0, 154.0], [54.1, 156.0], [54.2, 157.0], [54.3, 159.0], [54.4, 160.0], [54.5, 161.0], [54.6, 162.0], [54.7, 164.0], [54.8, 165.0], [54.9, 166.0], [55.0, 167.0], [55.1, 169.0], [55.2, 171.0], [55.3, 172.0], [55.4, 174.0], [55.5, 176.0], [55.6, 180.0], [55.7, 182.0], [55.8, 184.0], [55.9, 187.0], [56.0, 190.0], [56.1, 196.0], [56.2, 210.0], [56.3, 230.0], [56.4, 238.0], [56.5, 249.0], [56.6, 265.0], [56.7, 287.0], [56.8, 312.0], [56.9, 401.0], [57.0, 660.0], [57.1, 684.0], [57.2, 705.0], [57.3, 714.0], [57.4, 719.0], [57.5, 723.0], [57.6, 728.0], [57.7, 733.0], [57.8, 739.0], [57.9, 742.0], [58.0, 745.0], [58.1, 748.0], [58.2, 751.0], [58.3, 755.0], [58.4, 758.0], [58.5, 761.0], [58.6, 764.0], [58.7, 766.0], [58.8, 769.0], [58.9, 771.0], [59.0, 775.0], [59.1, 777.0], [59.2, 779.0], [59.3, 781.0], [59.4, 783.0], [59.5, 785.0], [59.6, 787.0], [59.7, 789.0], [59.8, 791.0], [59.9, 793.0], [60.0, 795.0], [60.1, 797.0], [60.2, 798.0], [60.3, 800.0], [60.4, 801.0], [60.5, 802.0], [60.6, 803.0], [60.7, 804.0], [60.8, 805.0], [60.9, 806.0], [61.0, 807.0], [61.1, 808.0], [61.2, 809.0], [61.3, 810.0], [61.4, 812.0], [61.5, 813.0], [61.6, 813.0], [61.7, 814.0], [61.8, 815.0], [61.9, 816.0], [62.0, 817.0], [62.1, 818.0], [62.2, 819.0], [62.3, 820.0], [62.4, 821.0], [62.5, 822.0], [62.6, 823.0], [62.7, 823.0], [62.8, 824.0], [62.9, 825.0], [63.0, 825.0], [63.1, 826.0], [63.2, 827.0], [63.3, 827.0], [63.4, 828.0], [63.5, 829.0], [63.6, 829.0], [63.7, 830.0], [63.8, 831.0], [63.9, 831.0], [64.0, 832.0], [64.1, 833.0], [64.2, 833.0], [64.3, 834.0], [64.4, 835.0], [64.5, 835.0], [64.6, 836.0], [64.7, 836.0], [64.8, 837.0], [64.9, 837.0], [65.0, 838.0], [65.1, 839.0], [65.2, 839.0], [65.3, 840.0], [65.4, 841.0], [65.5, 841.0], [65.6, 842.0], [65.7, 842.0], [65.8, 843.0], [65.9, 844.0], [66.0, 844.0], [66.1, 845.0], [66.2, 845.0], [66.3, 846.0], [66.4, 847.0], [66.5, 847.0], [66.6, 848.0], [66.7, 848.0], [66.8, 849.0], [66.9, 849.0], [67.0, 849.0], [67.1, 850.0], [67.2, 850.0], [67.3, 851.0], [67.4, 851.0], [67.5, 851.0], [67.6, 852.0], [67.7, 852.0], [67.8, 853.0], [67.9, 853.0], [68.0, 854.0], [68.1, 854.0], [68.2, 855.0], [68.3, 855.0], [68.4, 856.0], [68.5, 856.0], [68.6, 857.0], [68.7, 857.0], [68.8, 858.0], [68.9, 859.0], [69.0, 859.0], [69.1, 860.0], [69.2, 860.0], [69.3, 861.0], [69.4, 861.0], [69.5, 861.0], [69.6, 862.0], [69.7, 862.0], [69.8, 863.0], [69.9, 863.0], [70.0, 864.0], [70.1, 864.0], [70.2, 864.0], [70.3, 865.0], [70.4, 865.0], [70.5, 865.0], [70.6, 866.0], [70.7, 866.0], [70.8, 867.0], [70.9, 867.0], [71.0, 867.0], [71.1, 868.0], [71.2, 868.0], [71.3, 868.0], [71.4, 869.0], [71.5, 869.0], [71.6, 870.0], [71.7, 870.0], [71.8, 870.0], [71.9, 871.0], [72.0, 871.0], [72.1, 871.0], [72.2, 872.0], [72.3, 872.0], [72.4, 872.0], [72.5, 873.0], [72.6, 873.0], [72.7, 873.0], [72.8, 874.0], [72.9, 874.0], [73.0, 875.0], [73.1, 875.0], [73.2, 875.0], [73.3, 876.0], [73.4, 876.0], [73.5, 876.0], [73.6, 876.0], [73.7, 877.0], [73.8, 877.0], [73.9, 877.0], [74.0, 878.0], [74.1, 878.0], [74.2, 878.0], [74.3, 879.0], [74.4, 879.0], [74.5, 879.0], [74.6, 879.0], [74.7, 880.0], [74.8, 880.0], [74.9, 881.0], [75.0, 881.0], [75.1, 881.0], [75.2, 881.0], [75.3, 882.0], [75.4, 882.0], [75.5, 882.0], [75.6, 883.0], [75.7, 883.0], [75.8, 883.0], [75.9, 883.0], [76.0, 884.0], [76.1, 884.0], [76.2, 885.0], [76.3, 885.0], [76.4, 885.0], [76.5, 886.0], [76.6, 886.0], [76.7, 886.0], [76.8, 886.0], [76.9, 887.0], [77.0, 887.0], [77.1, 887.0], [77.2, 888.0], [77.3, 888.0], [77.4, 888.0], [77.5, 889.0], [77.6, 889.0], [77.7, 889.0], [77.8, 890.0], [77.9, 890.0], [78.0, 890.0], [78.1, 891.0], [78.2, 891.0], [78.3, 891.0], [78.4, 892.0], [78.5, 892.0], [78.6, 892.0], [78.7, 893.0], [78.8, 893.0], [78.9, 893.0], [79.0, 894.0], [79.1, 894.0], [79.2, 894.0], [79.3, 895.0], [79.4, 895.0], [79.5, 895.0], [79.6, 896.0], [79.7, 896.0], [79.8, 896.0], [79.9, 897.0], [80.0, 897.0], [80.1, 897.0], [80.2, 898.0], [80.3, 898.0], [80.4, 899.0], [80.5, 899.0], [80.6, 899.0], [80.7, 900.0], [80.8, 900.0], [80.9, 900.0], [81.0, 901.0], [81.1, 901.0], [81.2, 901.0], [81.3, 902.0], [81.4, 902.0], [81.5, 902.0], [81.6, 903.0], [81.7, 903.0], [81.8, 903.0], [81.9, 903.0], [82.0, 904.0], [82.1, 904.0], [82.2, 904.0], [82.3, 905.0], [82.4, 905.0], [82.5, 905.0], [82.6, 906.0], [82.7, 906.0], [82.8, 906.0], [82.9, 907.0], [83.0, 907.0], [83.1, 907.0], [83.2, 907.0], [83.3, 908.0], [83.4, 908.0], [83.5, 908.0], [83.6, 909.0], [83.7, 909.0], [83.8, 909.0], [83.9, 910.0], [84.0, 910.0], [84.1, 910.0], [84.2, 911.0], [84.3, 911.0], [84.4, 911.0], [84.5, 911.0], [84.6, 912.0], [84.7, 912.0], [84.8, 912.0], [84.9, 913.0], [85.0, 913.0], [85.1, 913.0], [85.2, 914.0], [85.3, 914.0], [85.4, 915.0], [85.5, 915.0], [85.6, 915.0], [85.7, 916.0], [85.8, 916.0], [85.9, 916.0], [86.0, 917.0], [86.1, 917.0], [86.2, 917.0], [86.3, 918.0], [86.4, 918.0], [86.5, 918.0], [86.6, 919.0], [86.7, 919.0], [86.8, 919.0], [86.9, 919.0], [87.0, 920.0], [87.1, 920.0], [87.2, 921.0], [87.3, 921.0], [87.4, 921.0], [87.5, 922.0], [87.6, 922.0], [87.7, 923.0], [87.8, 923.0], [87.9, 924.0], [88.0, 924.0], [88.1, 925.0], [88.2, 925.0], [88.3, 926.0], [88.4, 926.0], [88.5, 926.0], [88.6, 927.0], [88.7, 927.0], [88.8, 928.0], [88.9, 928.0], [89.0, 928.0], [89.1, 929.0], [89.2, 929.0], [89.3, 930.0], [89.4, 930.0], [89.5, 931.0], [89.6, 931.0], [89.7, 932.0], [89.8, 932.0], [89.9, 933.0], [90.0, 933.0], [90.1, 933.0], [90.2, 934.0], [90.3, 934.0], [90.4, 934.0], [90.5, 935.0], [90.6, 935.0], [90.7, 936.0], [90.8, 936.0], [90.9, 937.0], [91.0, 937.0], [91.1, 937.0], [91.2, 937.0], [91.3, 938.0], [91.4, 938.0], [91.5, 939.0], [91.6, 939.0], [91.7, 940.0], [91.8, 940.0], [91.9, 941.0], [92.0, 941.0], [92.1, 942.0], [92.2, 942.0], [92.3, 942.0], [92.4, 943.0], [92.5, 944.0], [92.6, 944.0], [92.7, 945.0], [92.8, 945.0], [92.9, 946.0], [93.0, 946.0], [93.1, 946.0], [93.2, 947.0], [93.3, 947.0], [93.4, 948.0], [93.5, 948.0], [93.6, 949.0], [93.7, 949.0], [93.8, 950.0], [93.9, 950.0], [94.0, 951.0], [94.1, 951.0], [94.2, 952.0], [94.3, 953.0], [94.4, 953.0], [94.5, 954.0], [94.6, 955.0], [94.7, 955.0], [94.8, 956.0], [94.9, 956.0], [95.0, 957.0], [95.1, 958.0], [95.2, 958.0], [95.3, 959.0], [95.4, 960.0], [95.5, 960.0], [95.6, 961.0], [95.7, 962.0], [95.8, 962.0], [95.9, 963.0], [96.0, 964.0], [96.1, 965.0], [96.2, 966.0], [96.3, 967.0], [96.4, 968.0], [96.5, 969.0], [96.6, 969.0], [96.7, 970.0], [96.8, 971.0], [96.9, 972.0], [97.0, 973.0], [97.1, 974.0], [97.2, 975.0], [97.3, 976.0], [97.4, 977.0], [97.5, 978.0], [97.6, 979.0], [97.7, 980.0], [97.8, 981.0], [97.9, 982.0], [98.0, 984.0], [98.1, 986.0], [98.2, 988.0], [98.3, 989.0], [98.4, 991.0], [98.5, 993.0], [98.6, 995.0], [98.7, 997.0], [98.8, 999.0], [98.9, 1001.0], [99.0, 1004.0], [99.1, 1006.0], [99.2, 1009.0], [99.3, 1012.0], [99.4, 1017.0], [99.5, 1021.0], [99.6, 1028.0], [99.7, 1037.0], [99.8, 1046.0], [99.9, 1114.0]], "isOverall": false, "label": "GET /folders", "isController": false}, {"data": [[0.0, 47.0], [0.1, 48.0], [0.2, 51.0], [0.3, 51.0], [0.4, 51.0], [0.5, 52.0], [0.6, 53.0], [0.7, 54.0], [0.8, 54.0], [0.9, 55.0], [1.0, 56.0], [1.1, 56.0], [1.2, 56.0], [1.3, 56.0], [1.4, 56.0], [1.5, 56.0], [1.6, 57.0], [1.7, 58.0], [1.8, 58.0], [1.9, 58.0], [2.0, 58.0], [2.1, 58.0], [2.2, 58.0], [2.3, 59.0], [2.4, 59.0], [2.5, 60.0], [2.6, 60.0], [2.7, 60.0], [2.8, 60.0], [2.9, 61.0], [3.0, 62.0], [3.1, 62.0], [3.2, 63.0], [3.3, 63.0], [3.4, 63.0], [3.5, 63.0], [3.6, 63.0], [3.7, 63.0], [3.8, 63.0], [3.9, 64.0], [4.0, 64.0], [4.1, 64.0], [4.2, 64.0], [4.3, 64.0], [4.4, 64.0], [4.5, 65.0], [4.6, 65.0], [4.7, 65.0], [4.8, 65.0], [4.9, 65.0], [5.0, 66.0], [5.1, 66.0], [5.2, 66.0], [5.3, 66.0], [5.4, 67.0], [5.5, 67.0], [5.6, 67.0], [5.7, 67.0], [5.8, 67.0], [5.9, 67.0], [6.0, 68.0], [6.1, 68.0], [6.2, 68.0], [6.3, 68.0], [6.4, 68.0], [6.5, 68.0], [6.6, 68.0], [6.7, 68.0], [6.8, 68.0], [6.9, 68.0], [7.0, 69.0], [7.1, 69.0], [7.2, 69.0], [7.3, 69.0], [7.4, 69.0], [7.5, 70.0], [7.6, 70.0], [7.7, 70.0], [7.8, 70.0], [7.9, 70.0], [8.0, 71.0], [8.1, 71.0], [8.2, 71.0], [8.3, 71.0], [8.4, 71.0], [8.5, 71.0], [8.6, 71.0], [8.7, 71.0], [8.8, 72.0], [8.9, 72.0], [9.0, 72.0], [9.1, 72.0], [9.2, 73.0], [9.3, 73.0], [9.4, 73.0], [9.5, 73.0], [9.6, 73.0], [9.7, 73.0], [9.8, 73.0], [9.9, 73.0], [10.0, 73.0], [10.1, 74.0], [10.2, 74.0], [10.3, 74.0], [10.4, 74.0], [10.5, 74.0], [10.6, 74.0], [10.7, 74.0], [10.8, 74.0], [10.9, 74.0], [11.0, 74.0], [11.1, 74.0], [11.2, 74.0], [11.3, 74.0], [11.4, 75.0], [11.5, 75.0], [11.6, 75.0], [11.7, 75.0], [11.8, 75.0], [11.9, 75.0], [12.0, 76.0], [12.1, 76.0], [12.2, 76.0], [12.3, 76.0], [12.4, 76.0], [12.5, 77.0], [12.6, 77.0], [12.7, 77.0], [12.8, 77.0], [12.9, 77.0], [13.0, 77.0], [13.1, 77.0], [13.2, 77.0], [13.3, 78.0], [13.4, 78.0], [13.5, 78.0], [13.6, 78.0], [13.7, 78.0], [13.8, 78.0], [13.9, 79.0], [14.0, 79.0], [14.1, 79.0], [14.2, 79.0], [14.3, 80.0], [14.4, 80.0], [14.5, 80.0], [14.6, 80.0], [14.7, 80.0], [14.8, 80.0], [14.9, 81.0], [15.0, 81.0], [15.1, 81.0], [15.2, 81.0], [15.3, 81.0], [15.4, 82.0], [15.5, 82.0], [15.6, 82.0], [15.7, 82.0], [15.8, 82.0], [15.9, 82.0], [16.0, 83.0], [16.1, 83.0], [16.2, 83.0], [16.3, 83.0], [16.4, 83.0], [16.5, 83.0], [16.6, 83.0], [16.7, 84.0], [16.8, 84.0], [16.9, 84.0], [17.0, 84.0], [17.1, 84.0], [17.2, 84.0], [17.3, 84.0], [17.4, 85.0], [17.5, 85.0], [17.6, 85.0], [17.7, 85.0], [17.8, 85.0], [17.9, 85.0], [18.0, 85.0], [18.1, 85.0], [18.2, 86.0], [18.3, 86.0], [18.4, 86.0], [18.5, 86.0], [18.6, 87.0], [18.7, 87.0], [18.8, 87.0], [18.9, 87.0], [19.0, 87.0], [19.1, 87.0], [19.2, 87.0], [19.3, 88.0], [19.4, 88.0], [19.5, 88.0], [19.6, 88.0], [19.7, 88.0], [19.8, 88.0], [19.9, 88.0], [20.0, 89.0], [20.1, 89.0], [20.2, 89.0], [20.3, 89.0], [20.4, 90.0], [20.5, 90.0], [20.6, 90.0], [20.7, 90.0], [20.8, 91.0], [20.9, 91.0], [21.0, 91.0], [21.1, 91.0], [21.2, 91.0], [21.3, 91.0], [21.4, 92.0], [21.5, 92.0], [21.6, 92.0], [21.7, 92.0], [21.8, 92.0], [21.9, 93.0], [22.0, 93.0], [22.1, 93.0], [22.2, 93.0], [22.3, 93.0], [22.4, 94.0], [22.5, 94.0], [22.6, 94.0], [22.7, 94.0], [22.8, 94.0], [22.9, 94.0], [23.0, 94.0], [23.1, 94.0], [23.2, 94.0], [23.3, 94.0], [23.4, 95.0], [23.5, 95.0], [23.6, 95.0], [23.7, 95.0], [23.8, 95.0], [23.9, 95.0], [24.0, 95.0], [24.1, 95.0], [24.2, 95.0], [24.3, 96.0], [24.4, 96.0], [24.5, 96.0], [24.6, 96.0], [24.7, 96.0], [24.8, 97.0], [24.9, 97.0], [25.0, 97.0], [25.1, 98.0], [25.2, 98.0], [25.3, 98.0], [25.4, 98.0], [25.5, 99.0], [25.6, 99.0], [25.7, 99.0], [25.8, 99.0], [25.9, 99.0], [26.0, 100.0], [26.1, 100.0], [26.2, 100.0], [26.3, 100.0], [26.4, 100.0], [26.5, 100.0], [26.6, 100.0], [26.7, 100.0], [26.8, 100.0], [26.9, 101.0], [27.0, 101.0], [27.1, 101.0], [27.2, 101.0], [27.3, 101.0], [27.4, 102.0], [27.5, 102.0], [27.6, 102.0], [27.7, 102.0], [27.8, 102.0], [27.9, 103.0], [28.0, 103.0], [28.1, 103.0], [28.2, 103.0], [28.3, 103.0], [28.4, 103.0], [28.5, 103.0], [28.6, 104.0], [28.7, 104.0], [28.8, 105.0], [28.9, 105.0], [29.0, 105.0], [29.1, 105.0], [29.2, 105.0], [29.3, 105.0], [29.4, 105.0], [29.5, 105.0], [29.6, 105.0], [29.7, 106.0], [29.8, 106.0], [29.9, 107.0], [30.0, 107.0], [30.1, 107.0], [30.2, 107.0], [30.3, 107.0], [30.4, 107.0], [30.5, 108.0], [30.6, 108.0], [30.7, 108.0], [30.8, 108.0], [30.9, 109.0], [31.0, 109.0], [31.1, 109.0], [31.2, 110.0], [31.3, 110.0], [31.4, 110.0], [31.5, 110.0], [31.6, 111.0], [31.7, 111.0], [31.8, 111.0], [31.9, 112.0], [32.0, 112.0], [32.1, 113.0], [32.2, 113.0], [32.3, 113.0], [32.4, 113.0], [32.5, 113.0], [32.6, 113.0], [32.7, 113.0], [32.8, 114.0], [32.9, 114.0], [33.0, 114.0], [33.1, 114.0], [33.2, 114.0], [33.3, 114.0], [33.4, 114.0], [33.5, 114.0], [33.6, 115.0], [33.7, 115.0], [33.8, 115.0], [33.9, 115.0], [34.0, 115.0], [34.1, 116.0], [34.2, 116.0], [34.3, 116.0], [34.4, 116.0], [34.5, 117.0], [34.6, 118.0], [34.7, 118.0], [34.8, 118.0], [34.9, 118.0], [35.0, 119.0], [35.1, 119.0], [35.2, 119.0], [35.3, 120.0], [35.4, 121.0], [35.5, 121.0], [35.6, 121.0], [35.7, 121.0], [35.8, 121.0], [35.9, 122.0], [36.0, 122.0], [36.1, 122.0], [36.2, 122.0], [36.3, 122.0], [36.4, 123.0], [36.5, 123.0], [36.6, 123.0], [36.7, 124.0], [36.8, 124.0], [36.9, 124.0], [37.0, 125.0], [37.1, 125.0], [37.2, 125.0], [37.3, 125.0], [37.4, 126.0], [37.5, 126.0], [37.6, 126.0], [37.7, 126.0], [37.8, 126.0], [37.9, 127.0], [38.0, 127.0], [38.1, 127.0], [38.2, 128.0], [38.3, 128.0], [38.4, 129.0], [38.5, 129.0], [38.6, 129.0], [38.7, 130.0], [38.8, 130.0], [38.9, 130.0], [39.0, 130.0], [39.1, 130.0], [39.2, 130.0], [39.3, 130.0], [39.4, 130.0], [39.5, 131.0], [39.6, 131.0], [39.7, 131.0], [39.8, 132.0], [39.9, 132.0], [40.0, 132.0], [40.1, 133.0], [40.2, 133.0], [40.3, 134.0], [40.4, 134.0], [40.5, 134.0], [40.6, 134.0], [40.7, 135.0], [40.8, 135.0], [40.9, 135.0], [41.0, 135.0], [41.1, 135.0], [41.2, 135.0], [41.3, 135.0], [41.4, 135.0], [41.5, 135.0], [41.6, 136.0], [41.7, 136.0], [41.8, 137.0], [41.9, 138.0], [42.0, 138.0], [42.1, 139.0], [42.2, 140.0], [42.3, 140.0], [42.4, 141.0], [42.5, 141.0], [42.6, 141.0], [42.7, 141.0], [42.8, 142.0], [42.9, 142.0], [43.0, 142.0], [43.1, 143.0], [43.2, 144.0], [43.3, 144.0], [43.4, 144.0], [43.5, 144.0], [43.6, 144.0], [43.7, 145.0], [43.8, 146.0], [43.9, 146.0], [44.0, 146.0], [44.1, 147.0], [44.2, 148.0], [44.3, 148.0], [44.4, 148.0], [44.5, 148.0], [44.6, 149.0], [44.7, 149.0], [44.8, 150.0], [44.9, 151.0], [45.0, 152.0], [45.1, 152.0], [45.2, 153.0], [45.3, 153.0], [45.4, 153.0], [45.5, 154.0], [45.6, 155.0], [45.7, 156.0], [45.8, 156.0], [45.9, 157.0], [46.0, 158.0], [46.1, 158.0], [46.2, 158.0], [46.3, 160.0], [46.4, 160.0], [46.5, 161.0], [46.6, 162.0], [46.7, 162.0], [46.8, 163.0], [46.9, 163.0], [47.0, 167.0], [47.1, 167.0], [47.2, 167.0], [47.3, 169.0], [47.4, 169.0], [47.5, 169.0], [47.6, 174.0], [47.7, 174.0], [47.8, 175.0], [47.9, 177.0], [48.0, 177.0], [48.1, 177.0], [48.2, 177.0], [48.3, 179.0], [48.4, 181.0], [48.5, 182.0], [48.6, 186.0], [48.7, 188.0], [48.8, 190.0], [48.9, 191.0], [49.0, 192.0], [49.1, 193.0], [49.2, 193.0], [49.3, 205.0], [49.4, 209.0], [49.5, 212.0], [49.6, 223.0], [49.7, 225.0], [49.8, 292.0], [49.9, 294.0], [50.0, 298.0], [50.1, 311.0], [50.2, 345.0], [50.3, 408.0], [50.4, 668.0], [50.5, 676.0], [50.6, 702.0], [50.7, 720.0], [50.8, 735.0], [50.9, 739.0], [51.0, 739.0], [51.1, 751.0], [51.2, 753.0], [51.3, 759.0], [51.4, 762.0], [51.5, 764.0], [51.6, 765.0], [51.7, 769.0], [51.8, 776.0], [51.9, 779.0], [52.0, 779.0], [52.1, 779.0], [52.2, 781.0], [52.3, 789.0], [52.4, 790.0], [52.5, 791.0], [52.6, 794.0], [52.7, 797.0], [52.8, 798.0], [52.9, 801.0], [53.0, 804.0], [53.1, 806.0], [53.2, 807.0], [53.3, 807.0], [53.4, 808.0], [53.5, 808.0], [53.6, 808.0], [53.7, 808.0], [53.8, 810.0], [53.9, 810.0], [54.0, 812.0], [54.1, 812.0], [54.2, 812.0], [54.3, 814.0], [54.4, 814.0], [54.5, 817.0], [54.6, 819.0], [54.7, 821.0], [54.8, 821.0], [54.9, 821.0], [55.0, 821.0], [55.1, 822.0], [55.2, 823.0], [55.3, 825.0], [55.4, 826.0], [55.5, 826.0], [55.6, 826.0], [55.7, 826.0], [55.8, 826.0], [55.9, 827.0], [56.0, 827.0], [56.1, 827.0], [56.2, 827.0], [56.3, 828.0], [56.4, 828.0], [56.5, 829.0], [56.6, 829.0], [56.7, 830.0], [56.8, 830.0], [56.9, 832.0], [57.0, 832.0], [57.1, 833.0], [57.2, 833.0], [57.3, 834.0], [57.4, 834.0], [57.5, 834.0], [57.6, 835.0], [57.7, 836.0], [57.8, 836.0], [57.9, 836.0], [58.0, 838.0], [58.1, 838.0], [58.2, 838.0], [58.3, 838.0], [58.4, 840.0], [58.5, 841.0], [58.6, 841.0], [58.7, 841.0], [58.8, 841.0], [58.9, 844.0], [59.0, 844.0], [59.1, 845.0], [59.2, 845.0], [59.3, 846.0], [59.4, 847.0], [59.5, 848.0], [59.6, 848.0], [59.7, 848.0], [59.8, 849.0], [59.9, 850.0], [60.0, 850.0], [60.1, 851.0], [60.2, 851.0], [60.3, 852.0], [60.4, 852.0], [60.5, 853.0], [60.6, 854.0], [60.7, 854.0], [60.8, 855.0], [60.9, 855.0], [61.0, 856.0], [61.1, 857.0], [61.2, 857.0], [61.3, 857.0], [61.4, 858.0], [61.5, 858.0], [61.6, 858.0], [61.7, 860.0], [61.8, 861.0], [61.9, 861.0], [62.0, 861.0], [62.1, 861.0], [62.2, 862.0], [62.3, 862.0], [62.4, 863.0], [62.5, 864.0], [62.6, 864.0], [62.7, 864.0], [62.8, 865.0], [62.9, 865.0], [63.0, 865.0], [63.1, 865.0], [63.2, 866.0], [63.3, 866.0], [63.4, 867.0], [63.5, 867.0], [63.6, 867.0], [63.7, 868.0], [63.8, 868.0], [63.9, 868.0], [64.0, 868.0], [64.1, 869.0], [64.2, 869.0], [64.3, 869.0], [64.4, 869.0], [64.5, 869.0], [64.6, 870.0], [64.7, 870.0], [64.8, 870.0], [64.9, 870.0], [65.0, 871.0], [65.1, 871.0], [65.2, 871.0], [65.3, 872.0], [65.4, 872.0], [65.5, 872.0], [65.6, 872.0], [65.7, 872.0], [65.8, 873.0], [65.9, 873.0], [66.0, 873.0], [66.1, 873.0], [66.2, 873.0], [66.3, 873.0], [66.4, 874.0], [66.5, 874.0], [66.6, 874.0], [66.7, 874.0], [66.8, 874.0], [66.9, 874.0], [67.0, 875.0], [67.1, 875.0], [67.2, 876.0], [67.3, 876.0], [67.4, 878.0], [67.5, 878.0], [67.6, 878.0], [67.7, 878.0], [67.8, 878.0], [67.9, 878.0], [68.0, 879.0], [68.1, 881.0], [68.2, 882.0], [68.3, 882.0], [68.4, 882.0], [68.5, 883.0], [68.6, 883.0], [68.7, 883.0], [68.8, 883.0], [68.9, 883.0], [69.0, 884.0], [69.1, 884.0], [69.2, 884.0], [69.3, 884.0], [69.4, 885.0], [69.5, 885.0], [69.6, 885.0], [69.7, 886.0], [69.8, 886.0], [69.9, 886.0], [70.0, 886.0], [70.1, 886.0], [70.2, 886.0], [70.3, 886.0], [70.4, 886.0], [70.5, 887.0], [70.6, 887.0], [70.7, 888.0], [70.8, 888.0], [70.9, 888.0], [71.0, 888.0], [71.1, 888.0], [71.2, 889.0], [71.3, 889.0], [71.4, 890.0], [71.5, 890.0], [71.6, 890.0], [71.7, 890.0], [71.8, 891.0], [71.9, 891.0], [72.0, 891.0], [72.1, 891.0], [72.2, 892.0], [72.3, 892.0], [72.4, 892.0], [72.5, 893.0], [72.6, 893.0], [72.7, 893.0], [72.8, 894.0], [72.9, 894.0], [73.0, 894.0], [73.1, 895.0], [73.2, 895.0], [73.3, 896.0], [73.4, 896.0], [73.5, 897.0], [73.6, 897.0], [73.7, 898.0], [73.8, 898.0], [73.9, 898.0], [74.0, 898.0], [74.1, 899.0], [74.2, 899.0], [74.3, 899.0], [74.4, 899.0], [74.5, 899.0], [74.6, 899.0], [74.7, 900.0], [74.8, 900.0], [74.9, 900.0], [75.0, 900.0], [75.1, 900.0], [75.2, 901.0], [75.3, 901.0], [75.4, 901.0], [75.5, 902.0], [75.6, 902.0], [75.7, 903.0], [75.8, 903.0], [75.9, 904.0], [76.0, 904.0], [76.1, 904.0], [76.2, 904.0], [76.3, 905.0], [76.4, 905.0], [76.5, 905.0], [76.6, 905.0], [76.7, 906.0], [76.8, 906.0], [76.9, 906.0], [77.0, 906.0], [77.1, 907.0], [77.2, 907.0], [77.3, 907.0], [77.4, 907.0], [77.5, 908.0], [77.6, 908.0], [77.7, 908.0], [77.8, 909.0], [77.9, 909.0], [78.0, 909.0], [78.1, 909.0], [78.2, 910.0], [78.3, 910.0], [78.4, 910.0], [78.5, 910.0], [78.6, 911.0], [78.7, 911.0], [78.8, 911.0], [78.9, 911.0], [79.0, 911.0], [79.1, 911.0], [79.2, 911.0], [79.3, 912.0], [79.4, 912.0], [79.5, 913.0], [79.6, 913.0], [79.7, 913.0], [79.8, 913.0], [79.9, 913.0], [80.0, 913.0], [80.1, 913.0], [80.2, 913.0], [80.3, 913.0], [80.4, 914.0], [80.5, 914.0], [80.6, 914.0], [80.7, 915.0], [80.8, 915.0], [80.9, 915.0], [81.0, 915.0], [81.1, 916.0], [81.2, 916.0], [81.3, 916.0], [81.4, 916.0], [81.5, 916.0], [81.6, 916.0], [81.7, 917.0], [81.8, 918.0], [81.9, 918.0], [82.0, 918.0], [82.1, 919.0], [82.2, 919.0], [82.3, 919.0], [82.4, 919.0], [82.5, 919.0], [82.6, 920.0], [82.7, 920.0], [82.8, 920.0], [82.9, 920.0], [83.0, 920.0], [83.1, 921.0], [83.2, 922.0], [83.3, 922.0], [83.4, 922.0], [83.5, 923.0], [83.6, 923.0], [83.7, 923.0], [83.8, 923.0], [83.9, 923.0], [84.0, 923.0], [84.1, 924.0], [84.2, 924.0], [84.3, 924.0], [84.4, 924.0], [84.5, 924.0], [84.6, 925.0], [84.7, 925.0], [84.8, 926.0], [84.9, 926.0], [85.0, 926.0], [85.1, 926.0], [85.2, 926.0], [85.3, 926.0], [85.4, 927.0], [85.5, 927.0], [85.6, 928.0], [85.7, 928.0], [85.8, 928.0], [85.9, 929.0], [86.0, 929.0], [86.1, 929.0], [86.2, 929.0], [86.3, 929.0], [86.4, 929.0], [86.5, 930.0], [86.6, 931.0], [86.7, 931.0], [86.8, 932.0], [86.9, 932.0], [87.0, 932.0], [87.1, 933.0], [87.2, 933.0], [87.3, 933.0], [87.4, 933.0], [87.5, 933.0], [87.6, 934.0], [87.7, 934.0], [87.8, 934.0], [87.9, 934.0], [88.0, 934.0], [88.1, 935.0], [88.2, 935.0], [88.3, 937.0], [88.4, 937.0], [88.5, 937.0], [88.6, 937.0], [88.7, 938.0], [88.8, 938.0], [88.9, 939.0], [89.0, 939.0], [89.1, 940.0], [89.2, 940.0], [89.3, 940.0], [89.4, 940.0], [89.5, 941.0], [89.6, 941.0], [89.7, 941.0], [89.8, 941.0], [89.9, 941.0], [90.0, 941.0], [90.1, 941.0], [90.2, 941.0], [90.3, 942.0], [90.4, 942.0], [90.5, 942.0], [90.6, 942.0], [90.7, 943.0], [90.8, 943.0], [90.9, 943.0], [91.0, 943.0], [91.1, 943.0], [91.2, 944.0], [91.3, 944.0], [91.4, 944.0], [91.5, 944.0], [91.6, 945.0], [91.7, 945.0], [91.8, 945.0], [91.9, 945.0], [92.0, 945.0], [92.1, 946.0], [92.2, 947.0], [92.3, 947.0], [92.4, 947.0], [92.5, 947.0], [92.6, 948.0], [92.7, 948.0], [92.8, 948.0], [92.9, 948.0], [93.0, 949.0], [93.1, 951.0], [93.2, 953.0], [93.3, 953.0], [93.4, 953.0], [93.5, 954.0], [93.6, 955.0], [93.7, 955.0], [93.8, 956.0], [93.9, 956.0], [94.0, 958.0], [94.1, 958.0], [94.2, 958.0], [94.3, 959.0], [94.4, 959.0], [94.5, 961.0], [94.6, 961.0], [94.7, 961.0], [94.8, 961.0], [94.9, 962.0], [95.0, 962.0], [95.1, 965.0], [95.2, 965.0], [95.3, 965.0], [95.4, 965.0], [95.5, 966.0], [95.6, 966.0], [95.7, 967.0], [95.8, 969.0], [95.9, 970.0], [96.0, 971.0], [96.1, 973.0], [96.2, 974.0], [96.3, 975.0], [96.4, 975.0], [96.5, 975.0], [96.6, 977.0], [96.7, 979.0], [96.8, 980.0], [96.9, 981.0], [97.0, 983.0], [97.1, 984.0], [97.2, 984.0], [97.3, 986.0], [97.4, 986.0], [97.5, 990.0], [97.6, 990.0], [97.7, 991.0], [97.8, 991.0], [97.9, 993.0], [98.0, 993.0], [98.1, 995.0], [98.2, 996.0], [98.3, 996.0], [98.4, 997.0], [98.5, 997.0], [98.6, 998.0], [98.7, 1001.0], [98.8, 1006.0], [98.9, 1006.0], [99.0, 1007.0], [99.1, 1009.0], [99.2, 1012.0], [99.3, 1013.0], [99.4, 1014.0], [99.5, 1016.0], [99.6, 1041.0], [99.7, 1054.0], [99.8, 1097.0], [99.9, 1940.0]], "isOverall": false, "label": "POST /addFolder", "isController": false}, {"data": [[0.0, 53.0], [0.1, 58.0], [0.2, 59.0], [0.3, 62.0], [0.4, 63.0], [0.5, 64.0], [0.6, 66.0], [0.7, 68.0], [0.8, 69.0], [0.9, 70.0], [1.0, 70.0], [1.1, 72.0], [1.2, 74.0], [1.3, 74.0], [1.4, 75.0], [1.5, 76.0], [1.6, 77.0], [1.7, 78.0], [1.8, 78.0], [1.9, 78.0], [2.0, 79.0], [2.1, 79.0], [2.2, 80.0], [2.3, 81.0], [2.4, 81.0], [2.5, 82.0], [2.6, 82.0], [2.7, 83.0], [2.8, 84.0], [2.9, 85.0], [3.0, 86.0], [3.1, 86.0], [3.2, 87.0], [3.3, 87.0], [3.4, 88.0], [3.5, 89.0], [3.6, 89.0], [3.7, 90.0], [3.8, 90.0], [3.9, 91.0], [4.0, 92.0], [4.1, 93.0], [4.2, 93.0], [4.3, 93.0], [4.4, 94.0], [4.5, 94.0], [4.6, 95.0], [4.7, 95.0], [4.8, 96.0], [4.9, 96.0], [5.0, 97.0], [5.1, 97.0], [5.2, 98.0], [5.3, 98.0], [5.4, 99.0], [5.5, 99.0], [5.6, 99.0], [5.7, 100.0], [5.8, 100.0], [5.9, 100.0], [6.0, 101.0], [6.1, 101.0], [6.2, 101.0], [6.3, 101.0], [6.4, 102.0], [6.5, 102.0], [6.6, 103.0], [6.7, 103.0], [6.8, 103.0], [6.9, 103.0], [7.0, 104.0], [7.1, 104.0], [7.2, 105.0], [7.3, 105.0], [7.4, 106.0], [7.5, 106.0], [7.6, 106.0], [7.7, 107.0], [7.8, 107.0], [7.9, 107.0], [8.0, 108.0], [8.1, 108.0], [8.2, 108.0], [8.3, 108.0], [8.4, 109.0], [8.5, 109.0], [8.6, 110.0], [8.7, 110.0], [8.8, 111.0], [8.9, 111.0], [9.0, 111.0], [9.1, 112.0], [9.2, 112.0], [9.3, 112.0], [9.4, 113.0], [9.5, 113.0], [9.6, 113.0], [9.7, 114.0], [9.8, 114.0], [9.9, 114.0], [10.0, 115.0], [10.1, 115.0], [10.2, 115.0], [10.3, 115.0], [10.4, 115.0], [10.5, 116.0], [10.6, 116.0], [10.7, 116.0], [10.8, 116.0], [10.9, 116.0], [11.0, 117.0], [11.1, 117.0], [11.2, 117.0], [11.3, 117.0], [11.4, 118.0], [11.5, 118.0], [11.6, 118.0], [11.7, 119.0], [11.8, 119.0], [11.9, 119.0], [12.0, 119.0], [12.1, 119.0], [12.2, 120.0], [12.3, 120.0], [12.4, 120.0], [12.5, 121.0], [12.6, 121.0], [12.7, 121.0], [12.8, 121.0], [12.9, 122.0], [13.0, 122.0], [13.1, 122.0], [13.2, 122.0], [13.3, 123.0], [13.4, 123.0], [13.5, 123.0], [13.6, 123.0], [13.7, 124.0], [13.8, 124.0], [13.9, 124.0], [14.0, 125.0], [14.1, 125.0], [14.2, 125.0], [14.3, 125.0], [14.4, 126.0], [14.5, 126.0], [14.6, 126.0], [14.7, 126.0], [14.8, 127.0], [14.9, 127.0], [15.0, 127.0], [15.1, 128.0], [15.2, 128.0], [15.3, 128.0], [15.4, 128.0], [15.5, 129.0], [15.6, 129.0], [15.7, 129.0], [15.8, 129.0], [15.9, 129.0], [16.0, 130.0], [16.1, 130.0], [16.2, 130.0], [16.3, 130.0], [16.4, 131.0], [16.5, 131.0], [16.6, 131.0], [16.7, 132.0], [16.8, 132.0], [16.9, 133.0], [17.0, 133.0], [17.1, 133.0], [17.2, 133.0], [17.3, 133.0], [17.4, 134.0], [17.5, 134.0], [17.6, 134.0], [17.7, 134.0], [17.8, 134.0], [17.9, 135.0], [18.0, 135.0], [18.1, 135.0], [18.2, 136.0], [18.3, 136.0], [18.4, 136.0], [18.5, 136.0], [18.6, 137.0], [18.7, 137.0], [18.8, 137.0], [18.9, 137.0], [19.0, 137.0], [19.1, 138.0], [19.2, 138.0], [19.3, 138.0], [19.4, 138.0], [19.5, 138.0], [19.6, 139.0], [19.7, 139.0], [19.8, 139.0], [19.9, 139.0], [20.0, 140.0], [20.1, 140.0], [20.2, 140.0], [20.3, 140.0], [20.4, 140.0], [20.5, 140.0], [20.6, 141.0], [20.7, 141.0], [20.8, 141.0], [20.9, 142.0], [21.0, 142.0], [21.1, 142.0], [21.2, 143.0], [21.3, 143.0], [21.4, 143.0], [21.5, 144.0], [21.6, 144.0], [21.7, 144.0], [21.8, 144.0], [21.9, 144.0], [22.0, 145.0], [22.1, 145.0], [22.2, 145.0], [22.3, 146.0], [22.4, 146.0], [22.5, 146.0], [22.6, 146.0], [22.7, 147.0], [22.8, 147.0], [22.9, 148.0], [23.0, 149.0], [23.1, 149.0], [23.2, 149.0], [23.3, 150.0], [23.4, 150.0], [23.5, 150.0], [23.6, 150.0], [23.7, 150.0], [23.8, 151.0], [23.9, 151.0], [24.0, 152.0], [24.1, 152.0], [24.2, 152.0], [24.3, 153.0], [24.4, 153.0], [24.5, 153.0], [24.6, 153.0], [24.7, 154.0], [24.8, 154.0], [24.9, 155.0], [25.0, 155.0], [25.1, 155.0], [25.2, 156.0], [25.3, 156.0], [25.4, 156.0], [25.5, 157.0], [25.6, 157.0], [25.7, 158.0], [25.8, 158.0], [25.9, 158.0], [26.0, 159.0], [26.1, 159.0], [26.2, 159.0], [26.3, 160.0], [26.4, 160.0], [26.5, 160.0], [26.6, 160.0], [26.7, 160.0], [26.8, 161.0], [26.9, 161.0], [27.0, 162.0], [27.1, 162.0], [27.2, 163.0], [27.3, 163.0], [27.4, 163.0], [27.5, 164.0], [27.6, 164.0], [27.7, 165.0], [27.8, 165.0], [27.9, 166.0], [28.0, 166.0], [28.1, 167.0], [28.2, 167.0], [28.3, 168.0], [28.4, 168.0], [28.5, 168.0], [28.6, 168.0], [28.7, 169.0], [28.8, 170.0], [28.9, 171.0], [29.0, 171.0], [29.1, 172.0], [29.2, 172.0], [29.3, 173.0], [29.4, 173.0], [29.5, 174.0], [29.6, 175.0], [29.7, 175.0], [29.8, 176.0], [29.9, 177.0], [30.0, 177.0], [30.1, 178.0], [30.2, 179.0], [30.3, 179.0], [30.4, 180.0], [30.5, 180.0], [30.6, 181.0], [30.7, 182.0], [30.8, 183.0], [30.9, 184.0], [31.0, 184.0], [31.1, 186.0], [31.2, 187.0], [31.3, 187.0], [31.4, 188.0], [31.5, 189.0], [31.6, 190.0], [31.7, 191.0], [31.8, 193.0], [31.9, 194.0], [32.0, 194.0], [32.1, 195.0], [32.2, 196.0], [32.3, 198.0], [32.4, 200.0], [32.5, 201.0], [32.6, 202.0], [32.7, 203.0], [32.8, 205.0], [32.9, 206.0], [33.0, 208.0], [33.1, 212.0], [33.2, 213.0], [33.3, 217.0], [33.4, 221.0], [33.5, 226.0], [33.6, 227.0], [33.7, 229.0], [33.8, 237.0], [33.9, 245.0], [34.0, 253.0], [34.1, 270.0], [34.2, 289.0], [34.3, 303.0], [34.4, 324.0], [34.5, 392.0], [34.6, 409.0], [34.7, 664.0], [34.8, 682.0], [34.9, 691.0], [35.0, 702.0], [35.1, 736.0], [35.2, 744.0], [35.3, 751.0], [35.4, 756.0], [35.5, 758.0], [35.6, 762.0], [35.7, 767.0], [35.8, 770.0], [35.9, 773.0], [36.0, 777.0], [36.1, 780.0], [36.2, 782.0], [36.3, 783.0], [36.4, 785.0], [36.5, 786.0], [36.6, 790.0], [36.7, 792.0], [36.8, 794.0], [36.9, 795.0], [37.0, 796.0], [37.1, 798.0], [37.2, 801.0], [37.3, 803.0], [37.4, 804.0], [37.5, 805.0], [37.6, 807.0], [37.7, 809.0], [37.8, 809.0], [37.9, 810.0], [38.0, 811.0], [38.1, 812.0], [38.2, 813.0], [38.3, 813.0], [38.4, 815.0], [38.5, 815.0], [38.6, 816.0], [38.7, 818.0], [38.8, 819.0], [38.9, 820.0], [39.0, 821.0], [39.1, 821.0], [39.2, 822.0], [39.3, 823.0], [39.4, 824.0], [39.5, 824.0], [39.6, 825.0], [39.7, 826.0], [39.8, 826.0], [39.9, 827.0], [40.0, 827.0], [40.1, 828.0], [40.2, 829.0], [40.3, 830.0], [40.4, 831.0], [40.5, 832.0], [40.6, 832.0], [40.7, 833.0], [40.8, 833.0], [40.9, 834.0], [41.0, 835.0], [41.1, 835.0], [41.2, 836.0], [41.3, 836.0], [41.4, 837.0], [41.5, 838.0], [41.6, 838.0], [41.7, 839.0], [41.8, 840.0], [41.9, 840.0], [42.0, 841.0], [42.1, 842.0], [42.2, 842.0], [42.3, 842.0], [42.4, 843.0], [42.5, 843.0], [42.6, 844.0], [42.7, 844.0], [42.8, 845.0], [42.9, 846.0], [43.0, 847.0], [43.1, 847.0], [43.2, 847.0], [43.3, 848.0], [43.4, 848.0], [43.5, 849.0], [43.6, 850.0], [43.7, 850.0], [43.8, 850.0], [43.9, 850.0], [44.0, 851.0], [44.1, 851.0], [44.2, 852.0], [44.3, 852.0], [44.4, 853.0], [44.5, 853.0], [44.6, 854.0], [44.7, 854.0], [44.8, 854.0], [44.9, 855.0], [45.0, 856.0], [45.1, 856.0], [45.2, 856.0], [45.3, 857.0], [45.4, 858.0], [45.5, 858.0], [45.6, 858.0], [45.7, 858.0], [45.8, 859.0], [45.9, 859.0], [46.0, 860.0], [46.1, 860.0], [46.2, 861.0], [46.3, 861.0], [46.4, 861.0], [46.5, 862.0], [46.6, 862.0], [46.7, 863.0], [46.8, 863.0], [46.9, 863.0], [47.0, 864.0], [47.1, 864.0], [47.2, 865.0], [47.3, 865.0], [47.4, 866.0], [47.5, 866.0], [47.6, 867.0], [47.7, 867.0], [47.8, 867.0], [47.9, 868.0], [48.0, 868.0], [48.1, 869.0], [48.2, 869.0], [48.3, 870.0], [48.4, 870.0], [48.5, 871.0], [48.6, 871.0], [48.7, 872.0], [48.8, 873.0], [48.9, 873.0], [49.0, 873.0], [49.1, 874.0], [49.2, 874.0], [49.3, 874.0], [49.4, 874.0], [49.5, 875.0], [49.6, 875.0], [49.7, 876.0], [49.8, 876.0], [49.9, 876.0], [50.0, 876.0], [50.1, 877.0], [50.2, 877.0], [50.3, 878.0], [50.4, 878.0], [50.5, 879.0], [50.6, 879.0], [50.7, 879.0], [50.8, 879.0], [50.9, 880.0], [51.0, 880.0], [51.1, 880.0], [51.2, 881.0], [51.3, 881.0], [51.4, 881.0], [51.5, 882.0], [51.6, 882.0], [51.7, 882.0], [51.8, 883.0], [51.9, 883.0], [52.0, 884.0], [52.1, 884.0], [52.2, 884.0], [52.3, 884.0], [52.4, 885.0], [52.5, 885.0], [52.6, 885.0], [52.7, 886.0], [52.8, 886.0], [52.9, 886.0], [53.0, 887.0], [53.1, 887.0], [53.2, 888.0], [53.3, 888.0], [53.4, 888.0], [53.5, 889.0], [53.6, 889.0], [53.7, 889.0], [53.8, 890.0], [53.9, 890.0], [54.0, 891.0], [54.1, 891.0], [54.2, 891.0], [54.3, 892.0], [54.4, 892.0], [54.5, 892.0], [54.6, 892.0], [54.7, 893.0], [54.8, 893.0], [54.9, 893.0], [55.0, 893.0], [55.1, 894.0], [55.2, 894.0], [55.3, 894.0], [55.4, 894.0], [55.5, 895.0], [55.6, 895.0], [55.7, 895.0], [55.8, 896.0], [55.9, 896.0], [56.0, 897.0], [56.1, 897.0], [56.2, 897.0], [56.3, 898.0], [56.4, 898.0], [56.5, 898.0], [56.6, 898.0], [56.7, 899.0], [56.8, 899.0], [56.9, 899.0], [57.0, 900.0], [57.1, 900.0], [57.2, 900.0], [57.3, 900.0], [57.4, 901.0], [57.5, 901.0], [57.6, 901.0], [57.7, 902.0], [57.8, 902.0], [57.9, 902.0], [58.0, 903.0], [58.1, 903.0], [58.2, 903.0], [58.3, 904.0], [58.4, 904.0], [58.5, 904.0], [58.6, 904.0], [58.7, 905.0], [58.8, 905.0], [58.9, 905.0], [59.0, 906.0], [59.1, 906.0], [59.2, 906.0], [59.3, 907.0], [59.4, 907.0], [59.5, 907.0], [59.6, 908.0], [59.7, 908.0], [59.8, 908.0], [59.9, 908.0], [60.0, 909.0], [60.1, 909.0], [60.2, 909.0], [60.3, 909.0], [60.4, 909.0], [60.5, 910.0], [60.6, 910.0], [60.7, 910.0], [60.8, 911.0], [60.9, 911.0], [61.0, 911.0], [61.1, 912.0], [61.2, 912.0], [61.3, 912.0], [61.4, 912.0], [61.5, 913.0], [61.6, 913.0], [61.7, 913.0], [61.8, 914.0], [61.9, 914.0], [62.0, 914.0], [62.1, 914.0], [62.2, 915.0], [62.3, 915.0], [62.4, 915.0], [62.5, 915.0], [62.6, 915.0], [62.7, 916.0], [62.8, 916.0], [62.9, 916.0], [63.0, 917.0], [63.1, 917.0], [63.2, 918.0], [63.3, 918.0], [63.4, 918.0], [63.5, 919.0], [63.6, 919.0], [63.7, 919.0], [63.8, 920.0], [63.9, 920.0], [64.0, 920.0], [64.1, 921.0], [64.2, 921.0], [64.3, 921.0], [64.4, 921.0], [64.5, 922.0], [64.6, 922.0], [64.7, 922.0], [64.8, 923.0], [64.9, 923.0], [65.0, 923.0], [65.1, 923.0], [65.2, 924.0], [65.3, 924.0], [65.4, 924.0], [65.5, 925.0], [65.6, 925.0], [65.7, 925.0], [65.8, 926.0], [65.9, 926.0], [66.0, 926.0], [66.1, 926.0], [66.2, 926.0], [66.3, 927.0], [66.4, 927.0], [66.5, 928.0], [66.6, 928.0], [66.7, 928.0], [66.8, 929.0], [66.9, 929.0], [67.0, 929.0], [67.1, 930.0], [67.2, 930.0], [67.3, 931.0], [67.4, 931.0], [67.5, 931.0], [67.6, 931.0], [67.7, 931.0], [67.8, 932.0], [67.9, 932.0], [68.0, 932.0], [68.1, 933.0], [68.2, 933.0], [68.3, 933.0], [68.4, 933.0], [68.5, 934.0], [68.6, 934.0], [68.7, 934.0], [68.8, 934.0], [68.9, 935.0], [69.0, 935.0], [69.1, 935.0], [69.2, 936.0], [69.3, 936.0], [69.4, 936.0], [69.5, 937.0], [69.6, 937.0], [69.7, 937.0], [69.8, 937.0], [69.9, 938.0], [70.0, 938.0], [70.1, 939.0], [70.2, 939.0], [70.3, 939.0], [70.4, 940.0], [70.5, 940.0], [70.6, 940.0], [70.7, 941.0], [70.8, 941.0], [70.9, 941.0], [71.0, 942.0], [71.1, 942.0], [71.2, 942.0], [71.3, 942.0], [71.4, 942.0], [71.5, 943.0], [71.6, 943.0], [71.7, 944.0], [71.8, 944.0], [71.9, 944.0], [72.0, 944.0], [72.1, 945.0], [72.2, 945.0], [72.3, 945.0], [72.4, 946.0], [72.5, 946.0], [72.6, 947.0], [72.7, 947.0], [72.8, 947.0], [72.9, 948.0], [73.0, 948.0], [73.1, 948.0], [73.2, 949.0], [73.3, 949.0], [73.4, 949.0], [73.5, 949.0], [73.6, 950.0], [73.7, 950.0], [73.8, 950.0], [73.9, 951.0], [74.0, 951.0], [74.1, 951.0], [74.2, 952.0], [74.3, 952.0], [74.4, 952.0], [74.5, 952.0], [74.6, 953.0], [74.7, 953.0], [74.8, 954.0], [74.9, 954.0], [75.0, 954.0], [75.1, 955.0], [75.2, 955.0], [75.3, 956.0], [75.4, 956.0], [75.5, 956.0], [75.6, 956.0], [75.7, 957.0], [75.8, 957.0], [75.9, 957.0], [76.0, 958.0], [76.1, 958.0], [76.2, 958.0], [76.3, 958.0], [76.4, 959.0], [76.5, 959.0], [76.6, 959.0], [76.7, 959.0], [76.8, 960.0], [76.9, 960.0], [77.0, 961.0], [77.1, 961.0], [77.2, 962.0], [77.3, 962.0], [77.4, 962.0], [77.5, 962.0], [77.6, 963.0], [77.7, 963.0], [77.8, 963.0], [77.9, 963.0], [78.0, 964.0], [78.1, 964.0], [78.2, 964.0], [78.3, 965.0], [78.4, 965.0], [78.5, 965.0], [78.6, 966.0], [78.7, 966.0], [78.8, 966.0], [78.9, 967.0], [79.0, 967.0], [79.1, 967.0], [79.2, 967.0], [79.3, 967.0], [79.4, 968.0], [79.5, 968.0], [79.6, 969.0], [79.7, 969.0], [79.8, 969.0], [79.9, 969.0], [80.0, 970.0], [80.1, 970.0], [80.2, 970.0], [80.3, 971.0], [80.4, 971.0], [80.5, 971.0], [80.6, 971.0], [80.7, 972.0], [80.8, 972.0], [80.9, 972.0], [81.0, 973.0], [81.1, 973.0], [81.2, 973.0], [81.3, 974.0], [81.4, 974.0], [81.5, 974.0], [81.6, 974.0], [81.7, 975.0], [81.8, 975.0], [81.9, 975.0], [82.0, 976.0], [82.1, 976.0], [82.2, 976.0], [82.3, 977.0], [82.4, 977.0], [82.5, 977.0], [82.6, 977.0], [82.7, 977.0], [82.8, 978.0], [82.9, 978.0], [83.0, 978.0], [83.1, 979.0], [83.2, 979.0], [83.3, 979.0], [83.4, 980.0], [83.5, 980.0], [83.6, 980.0], [83.7, 981.0], [83.8, 981.0], [83.9, 981.0], [84.0, 982.0], [84.1, 982.0], [84.2, 982.0], [84.3, 982.0], [84.4, 983.0], [84.5, 983.0], [84.6, 984.0], [84.7, 984.0], [84.8, 984.0], [84.9, 984.0], [85.0, 985.0], [85.1, 985.0], [85.2, 986.0], [85.3, 986.0], [85.4, 986.0], [85.5, 987.0], [85.6, 987.0], [85.7, 987.0], [85.8, 988.0], [85.9, 988.0], [86.0, 988.0], [86.1, 989.0], [86.2, 989.0], [86.3, 990.0], [86.4, 990.0], [86.5, 990.0], [86.6, 991.0], [86.7, 991.0], [86.8, 992.0], [86.9, 992.0], [87.0, 992.0], [87.1, 993.0], [87.2, 993.0], [87.3, 993.0], [87.4, 994.0], [87.5, 994.0], [87.6, 994.0], [87.7, 995.0], [87.8, 995.0], [87.9, 995.0], [88.0, 996.0], [88.1, 996.0], [88.2, 997.0], [88.3, 997.0], [88.4, 998.0], [88.5, 998.0], [88.6, 999.0], [88.7, 999.0], [88.8, 999.0], [88.9, 1000.0], [89.0, 1000.0], [89.1, 1001.0], [89.2, 1001.0], [89.3, 1002.0], [89.4, 1002.0], [89.5, 1002.0], [89.6, 1003.0], [89.7, 1003.0], [89.8, 1004.0], [89.9, 1004.0], [90.0, 1005.0], [90.1, 1005.0], [90.2, 1005.0], [90.3, 1006.0], [90.4, 1006.0], [90.5, 1007.0], [90.6, 1007.0], [90.7, 1007.0], [90.8, 1008.0], [90.9, 1008.0], [91.0, 1009.0], [91.1, 1009.0], [91.2, 1010.0], [91.3, 1010.0], [91.4, 1011.0], [91.5, 1011.0], [91.6, 1012.0], [91.7, 1012.0], [91.8, 1013.0], [91.9, 1013.0], [92.0, 1013.0], [92.1, 1014.0], [92.2, 1015.0], [92.3, 1015.0], [92.4, 1015.0], [92.5, 1016.0], [92.6, 1016.0], [92.7, 1016.0], [92.8, 1017.0], [92.9, 1017.0], [93.0, 1018.0], [93.1, 1019.0], [93.2, 1019.0], [93.3, 1020.0], [93.4, 1021.0], [93.5, 1022.0], [93.6, 1022.0], [93.7, 1023.0], [93.8, 1024.0], [93.9, 1025.0], [94.0, 1025.0], [94.1, 1026.0], [94.2, 1026.0], [94.3, 1027.0], [94.4, 1027.0], [94.5, 1028.0], [94.6, 1029.0], [94.7, 1030.0], [94.8, 1030.0], [94.9, 1031.0], [95.0, 1032.0], [95.1, 1033.0], [95.2, 1034.0], [95.3, 1035.0], [95.4, 1036.0], [95.5, 1036.0], [95.6, 1037.0], [95.7, 1038.0], [95.8, 1039.0], [95.9, 1040.0], [96.0, 1041.0], [96.1, 1042.0], [96.2, 1044.0], [96.3, 1045.0], [96.4, 1046.0], [96.5, 1047.0], [96.6, 1047.0], [96.7, 1049.0], [96.8, 1050.0], [96.9, 1051.0], [97.0, 1053.0], [97.1, 1054.0], [97.2, 1055.0], [97.3, 1056.0], [97.4, 1057.0], [97.5, 1059.0], [97.6, 1061.0], [97.7, 1063.0], [97.8, 1064.0], [97.9, 1064.0], [98.0, 1066.0], [98.1, 1067.0], [98.2, 1069.0], [98.3, 1072.0], [98.4, 1076.0], [98.5, 1079.0], [98.6, 1083.0], [98.7, 1085.0], [98.8, 1087.0], [98.9, 1091.0], [99.0, 1096.0], [99.1, 1100.0], [99.2, 1108.0], [99.3, 1111.0], [99.4, 1118.0], [99.5, 1126.0], [99.6, 1132.0], [99.7, 1154.0], [99.8, 1226.0], [99.9, 1298.0], [100.0, 2831.0]], "isOverall": false, "label": "GET /children", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 8975.0, "series": [{"data": [[0.0, 430.0], [1100.0, 3.0], [300.0, 5.0], [600.0, 2.0], [700.0, 28.0], [100.0, 227.0], [200.0, 5.0], [800.0, 263.0], [1800.0, 2.0], [900.0, 285.0], [1000.0, 13.0]], "isOverall": false, "label": "PUT /folder", "isController": false}, {"data": [[0.0, 8975.0], [2100.0, 1.0], [600.0, 44.0], [700.0, 642.0], [2700.0, 1.0], [200.0, 127.0], [800.0, 4250.0], [900.0, 3776.0], [1000.0, 225.0], [1100.0, 11.0], [300.0, 28.0], [400.0, 14.0], [100.0, 2718.0], [1800.0, 1.0], [1900.0, 6.0], [500.0, 5.0], [2000.0, 2.0]], "isOverall": false, "label": "GET /folders", "isController": false}, {"data": [[0.0, 312.0], [300.0, 3.0], [600.0, 2.0], [700.0, 28.0], [200.0, 9.0], [400.0, 1.0], [800.0, 262.0], [100.0, 280.0], [900.0, 288.0], [1900.0, 2.0], [1000.0, 14.0]], "isOverall": false, "label": "POST /addFolder", "isController": false}, {"data": [[0.0, 389.0], [600.0, 21.0], [700.0, 151.0], [2800.0, 1.0], [200.0, 128.0], [800.0, 1358.0], [900.0, 2183.0], [1000.0, 706.0], [1100.0, 47.0], [300.0, 19.0], [1200.0, 9.0], [100.0, 1833.0], [400.0, 9.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 2.0]], "isOverall": false, "label": "GET /children", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 21.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 15512.0, "series": [{"data": [[0.0, 15512.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 14616.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 21.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.8, "minX": 1.66621938E12, "maxY": 15.0, "series": [{"data": [[1.6662195E12, 15.0], [1.66621962E12, 15.0], [1.66621944E12, 15.0], [1.66621956E12, 15.0], [1.66621938E12, 12.843750000000004], [1.66621968E12, 14.906333630686886]], "isOverall": false, "label": "GET_CHILDREN_BY_ROOT_ID", "isController": false}, {"data": [[1.6662195E12, 15.0], [1.66621962E12, 15.0], [1.66621944E12, 15.0], [1.66621956E12, 15.0], [1.66621938E12, 12.882352941176467], [1.66621968E12, 14.953541858325668]], "isOverall": false, "label": "GET_PARENT_BY_CHILD_ID", "isController": false}, {"data": [[1.6662195E12, 2.0], [1.66621962E12, 2.0], [1.66621944E12, 2.0], [1.66621956E12, 2.0], [1.66621938E12, 1.8333333333333335], [1.66621968E12, 1.9961977186311788]], "isOverall": false, "label": "UPDATE_FOLDER_BY_ID", "isController": false}, {"data": [[1.6662195E12, 15.0], [1.66621962E12, 15.0], [1.66621944E12, 15.0], [1.66621956E12, 15.0], [1.66621938E12, 13.38235294117647], [1.66621968E12, 14.952185792349727]], "isOverall": false, "label": "GET_FOLDER_BY_ID", "isController": false}, {"data": [[1.6662195E12, 2.0], [1.66621962E12, 2.0], [1.66621944E12, 2.0], [1.66621956E12, 2.0], [1.66621938E12, 1.8], [1.66621968E12, 1.9958847736625513]], "isOverall": false, "label": "ADD_CHILD_IN_ROOT_BY_ID", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66621968E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 89.0, "minX": 1.0, "maxY": 975.0, "series": [{"data": [[17.0, 191.0], [34.0, 302.0], [19.0, 874.0], [40.0, 281.0], [20.0, 867.0], [46.0, 280.0], [49.0, 475.3508353221961]], "isOverall": false, "label": "PUT /folder", "isController": false}, {"data": [[48.90657165479018, 475.30562153602534]], "isOverall": false, "label": "PUT /folder-Aggregated", "isController": false}, {"data": [[33.0, 337.0], [32.0, 869.5], [34.0, 564.2], [37.0, 385.0], [36.0, 875.0], [38.0, 566.25], [39.0, 874.0], [40.0, 452.33333333333337], [41.0, 876.0], [43.0, 391.33333333333337], [42.0, 851.0], [44.0, 535.5], [46.0, 394.0], [48.0, 265.0], [49.0, 431.7804102860426], [14.0, 89.0], [18.0, 826.0], [20.0, 247.0], [21.0, 882.0], [22.0, 881.0], [23.0, 880.0], [24.0, 833.0], [25.0, 619.5], [26.0, 882.0], [27.0, 886.0], [28.0, 502.66666666666663], [29.0, 817.0], [30.0, 856.0], [31.0, 310.5]], "isOverall": false, "label": "GET /folders", "isController": false}, {"data": [[48.96072217420519, 432.11855373091345]], "isOverall": false, "label": "GET /folders-Aggregated", "isController": false}, {"data": [[16.0, 872.0], [17.0, 870.0], [38.0, 268.0], [42.0, 298.0], [23.0, 345.0], [49.0, 499.71989966555134]], "isOverall": false, "label": "POST /addFolder", "isController": false}, {"data": [[48.90924229808497, 499.8484596169859]], "isOverall": false, "label": "POST /addFolder-Aggregated", "isController": false}, {"data": [[33.0, 335.0], [2.0, 851.0], [34.0, 326.0], [37.0, 299.5], [40.0, 284.3333333333333], [43.0, 305.0], [45.0, 305.0], [46.0, 300.0], [49.0, 656.5955483965461], [3.0, 848.0], [4.0, 879.0], [5.0, 967.0], [6.0, 894.0], [7.0, 848.0], [8.0, 836.0], [9.0, 841.0], [10.0, 843.0], [11.0, 858.0], [12.0, 897.0], [13.0, 975.0], [14.0, 852.0], [15.0, 932.0], [1.0, 923.0], [17.0, 141.0], [23.0, 316.0], [26.0, 367.0], [28.0, 318.0], [31.0, 301.0]], "isOverall": false, "label": "GET /children", "isController": false}, {"data": [[48.87899110657539, 656.3057296982059]], "isOverall": false, "label": "GET /children-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 49.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 377.0, "minX": 1.66621938E12, "maxY": 27146.333333333332, "series": [{"data": [[1.6662195E12, 26669.716666666667], [1.66621962E12, 27146.333333333332], [1.66621944E12, 26557.633333333335], [1.66621956E12, 27006.5], [1.66621938E12, 493.28333333333336], [1.66621968E12, 26945.933333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6662195E12, 20296.033333333333], [1.66621962E12, 20545.4], [1.66621944E12, 20224.05], [1.66621956E12, 20530.483333333334], [1.66621938E12, 377.0], [1.66621968E12, 20390.016666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66621968E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 288.1666666666667, "minX": 1.66621938E12, "maxY": 802.9518287243529, "series": [{"data": [[1.6662195E12, 475.23694779116437], [1.66621962E12, 464.91472868217033], [1.66621944E12, 501.3916666666667], [1.66621956E12, 486.1578947368421], [1.66621938E12, 288.1666666666667], [1.66621968E12, 455.83650190114054]], "isOverall": false, "label": "PUT /folder", "isController": false}, {"data": [[1.6662195E12, 440.33755274261597], [1.66621962E12, 417.5187935034805], [1.66621944E12, 459.48458598726165], [1.66621956E12, 436.82686711930086], [1.66621938E12, 340.0294117647057], [1.66621968E12, 411.3505720823796]], "isOverall": false, "label": "GET /folders", "isController": false}, {"data": [[1.6662195E12, 499.1898734177215], [1.66621962E12, 489.1591836734695], [1.66621944E12, 522.051948051948], [1.66621956E12, 500.48749999999967], [1.66621938E12, 299.4], [1.66621968E12, 493.65432098765405]], "isOverall": false, "label": "POST /addFolder", "isController": false}, {"data": [[1.6662195E12, 606.8880546075067], [1.66621962E12, 728.8582995951417], [1.66621944E12, 574.4285714285717], [1.66621956E12, 626.2600834492366], [1.66621938E12, 343.59375], [1.66621968E12, 802.9518287243529]], "isOverall": false, "label": "GET /children", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66621968E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 288.1666666666667, "minX": 1.66621938E12, "maxY": 802.9518287243529, "series": [{"data": [[1.6662195E12, 475.22891566265054], [1.66621962E12, 464.9108527131781], [1.66621944E12, 501.38749999999976], [1.66621956E12, 486.1578947368421], [1.66621938E12, 288.1666666666667], [1.66621968E12, 455.83650190114054]], "isOverall": false, "label": "PUT /folder", "isController": false}, {"data": [[1.6662195E12, 440.33655994043113], [1.66621962E12, 417.517401392111], [1.66621944E12, 459.4777070063694], [1.66621956E12, 436.8249272550908], [1.66621938E12, 339.97058823529414], [1.66621968E12, 411.34919908466884]], "isOverall": false, "label": "GET /folders", "isController": false}, {"data": [[1.6662195E12, 499.1772151898735], [1.66621962E12, 489.1591836734695], [1.66621944E12, 522.051948051948], [1.66621956E12, 500.48749999999967], [1.66621938E12, 299.4], [1.66621968E12, 493.65432098765405]], "isOverall": false, "label": "POST /addFolder", "isController": false}, {"data": [[1.6662195E12, 606.8846416382245], [1.66621962E12, 728.8550607287448], [1.66621944E12, 574.4234693877557], [1.66621956E12, 626.2586926286507], [1.66621938E12, 343.56249999999994], [1.66621968E12, 802.9518287243529]], "isOverall": false, "label": "GET /children", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66621968E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.004081632653061228, "minX": 1.66621938E12, "maxY": 7.0, "series": [{"data": [[1.6662195E12, 0.012048192771084343], [1.66621962E12, 0.015503875968992251], [1.66621944E12, 0.012499999999999999], [1.66621956E12, 0.008097165991902836], [1.66621938E12, 6.166666666666667], [1.66621968E12, 0.007604562737642592]], "isOverall": false, "label": "PUT /folder", "isController": false}, {"data": [[1.6662195E12, 0.005212211466865226], [1.66621962E12, 0.009048723897911852], [1.66621944E12, 0.009171974522292993], [1.66621956E12, 0.010184287099903018], [1.66621938E12, 3.308823529411763], [1.66621968E12, 0.004576659038901611]], "isOverall": false, "label": "GET /folders", "isController": false}, {"data": [[1.6662195E12, 0.016877637130801693], [1.66621962E12, 0.004081632653061228], [1.66621944E12, 0.004329004329004329], [1.66621956E12, 0.008333333333333338], [1.66621938E12, 7.0], [1.66621968E12, 0.012345679012345697]], "isOverall": false, "label": "POST /addFolder", "isController": false}, {"data": [[1.6662195E12, 0.008191126279863495], [1.66621962E12, 0.011336032388663991], [1.66621944E12, 0.004464285714285715], [1.66621956E12, 0.008344923504867856], [1.66621938E12, 3.4062500000000018], [1.66621968E12, 0.015165031222123088]], "isOverall": false, "label": "GET /children", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66621968E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 36.0, "minX": 1.66621938E12, "maxY": 2831.0, "series": [{"data": [[1.6662195E12, 1142.0], [1.66621962E12, 1298.0], [1.66621944E12, 2831.0], [1.66621956E12, 1132.0], [1.66621938E12, 691.0], [1.66621968E12, 1228.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6662195E12, 955.0], [1.66621962E12, 960.0], [1.66621944E12, 948.0], [1.66621956E12, 946.0], [1.66621938E12, 425.59999999999997], [1.66621968E12, 969.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6662195E12, 1022.1899999999996], [1.66621962E12, 1059.0], [1.66621944E12, 1080.7000000000007], [1.66621956E12, 1027.5], [1.66621938E12, 687.6399999999999], [1.66621968E12, 1063.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6662195E12, 977.0], [1.66621962E12, 990.5500000000002], [1.66621944E12, 978.0], [1.66621956E12, 973.0], [1.66621938E12, 541.5999999999999], [1.66621968E12, 1005.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6662195E12, 36.0], [1.66621962E12, 37.0], [1.66621944E12, 42.0], [1.66621956E12, 38.0], [1.66621938E12, 89.0], [1.66621968E12, 36.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6662195E12, 172.0], [1.66621962E12, 212.5], [1.66621944E12, 208.5], [1.66621956E12, 176.0], [1.66621938E12, 301.0], [1.66621968E12, 186.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66621968E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 70.0, "minX": 5.0, "maxY": 934.0, "series": [{"data": [[5.0, 191.0], [21.0, 74.0], [49.0, 869.0], [53.0, 210.0], [55.0, 70.0], [67.0, 85.0], [69.0, 904.5], [70.0, 99.0], [71.0, 98.0], [73.0, 807.0], [74.0, 145.0], [75.0, 891.0], [79.0, 166.5], [77.0, 934.0], [81.0, 898.0], [82.0, 131.0], [80.0, 110.5], [84.0, 136.0], [87.0, 808.0], [85.0, 174.5], [86.0, 138.0], [88.0, 196.5], [90.0, 505.5], [91.0, 889.0], [89.0, 125.5], [95.0, 847.0], [93.0, 135.0], [94.0, 142.5], [92.0, 110.0], [98.0, 158.0], [97.0, 181.0], [96.0, 146.0], [99.0, 187.0], [102.0, 783.0], [101.0, 188.0], [103.0, 172.0], [100.0, 187.0], [106.0, 298.0], [105.0, 402.0], [107.0, 189.0], [104.0, 490.0], [108.0, 138.5], [110.0, 476.5], [109.0, 176.0], [111.0, 777.0], [115.0, 139.0], [112.0, 88.0], [113.0, 170.5], [114.0, 835.5], [119.0, 174.0], [118.0, 175.5], [123.0, 827.0], [120.0, 784.5], [122.0, 825.0], [125.0, 191.0], [124.0, 148.0], [127.0, 852.0], [126.0, 830.5], [128.0, 210.5], [130.0, 134.0], [129.0, 832.0], [131.0, 824.0], [137.0, 101.0], [138.0, 750.0], [140.0, 780.0], [144.0, 144.0], [147.0, 770.0], [158.0, 108.0], [178.0, 678.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 178.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 70.0, "minX": 5.0, "maxY": 934.0, "series": [{"data": [[5.0, 191.0], [21.0, 74.0], [49.0, 869.0], [53.0, 210.0], [55.0, 70.0], [67.0, 85.0], [69.0, 904.5], [70.0, 99.0], [71.0, 98.0], [73.0, 807.0], [74.0, 145.0], [75.0, 891.0], [79.0, 166.5], [77.0, 934.0], [81.0, 898.0], [82.0, 131.0], [80.0, 110.5], [84.0, 136.0], [87.0, 808.0], [85.0, 174.5], [86.0, 138.0], [88.0, 196.5], [90.0, 505.5], [91.0, 889.0], [89.0, 125.5], [95.0, 847.0], [93.0, 135.0], [94.0, 142.5], [92.0, 110.0], [98.0, 158.0], [97.0, 181.0], [96.0, 146.0], [99.0, 187.0], [102.0, 783.0], [101.0, 188.0], [103.0, 172.0], [100.0, 187.0], [106.0, 298.0], [105.0, 401.5], [107.0, 189.0], [104.0, 490.0], [108.0, 138.5], [110.0, 476.5], [109.0, 176.0], [111.0, 777.0], [115.0, 139.0], [112.0, 88.0], [113.0, 170.5], [114.0, 835.5], [119.0, 174.0], [118.0, 175.5], [123.0, 827.0], [120.0, 784.5], [122.0, 825.0], [125.0, 191.0], [124.0, 148.0], [127.0, 852.0], [126.0, 830.5], [128.0, 210.5], [130.0, 134.0], [129.0, 832.0], [131.0, 824.0], [137.0, 101.0], [138.0, 750.0], [140.0, 780.0], [144.0, 144.0], [147.0, 770.0], [158.0, 108.0], [178.0, 678.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 178.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2.6666666666666665, "minX": 1.66621938E12, "maxY": 100.81666666666666, "series": [{"data": [[1.6662195E12, 99.66666666666667], [1.66621962E12, 100.8], [1.66621944E12, 99.4], [1.66621956E12, 100.81666666666666], [1.66621938E12, 2.6666666666666665], [1.66621968E12, 99.13333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66621968E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.85, "minX": 1.66621938E12, "maxY": 100.81666666666666, "series": [{"data": [[1.6662195E12, 99.66666666666667], [1.66621962E12, 100.8], [1.66621944E12, 99.4], [1.66621956E12, 100.81666666666666], [1.66621938E12, 1.85], [1.66621968E12, 99.95]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66621968E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.66621938E12, "maxY": 72.83333333333333, "series": [{"data": [[1.6662195E12, 4.15], [1.66621962E12, 4.3], [1.66621944E12, 4.0], [1.66621956E12, 4.116666666666666], [1.66621938E12, 0.1], [1.66621968E12, 4.383333333333334]], "isOverall": false, "label": "PUT /folder-success", "isController": false}, {"data": [[1.6662195E12, 3.95], [1.66621962E12, 4.083333333333333], [1.66621944E12, 3.85], [1.66621956E12, 4.0], [1.66621938E12, 0.08333333333333333], [1.66621968E12, 4.05]], "isOverall": false, "label": "POST /addFolder-success", "isController": false}, {"data": [[1.6662195E12, 24.416666666666668], [1.66621962E12, 20.583333333333332], [1.66621944E12, 26.133333333333333], [1.66621956E12, 23.966666666666665], [1.66621938E12, 0.5333333333333333], [1.66621968E12, 18.683333333333334]], "isOverall": false, "label": "GET /children-success", "isController": false}, {"data": [[1.6662195E12, 67.15], [1.66621962E12, 71.83333333333333], [1.66621944E12, 65.41666666666667], [1.66621956E12, 68.73333333333333], [1.66621938E12, 1.1333333333333333], [1.66621968E12, 72.83333333333333]], "isOverall": false, "label": "GET /folders-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66621968E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.85, "minX": 1.66621938E12, "maxY": 100.81666666666666, "series": [{"data": [[1.6662195E12, 99.66666666666667], [1.66621962E12, 100.8], [1.66621944E12, 99.4], [1.66621956E12, 100.81666666666666], [1.66621938E12, 1.85], [1.66621968E12, 99.95]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66621968E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

